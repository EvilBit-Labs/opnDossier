name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  pull-requests: read

jobs:
  test:
    strategy:
      matrix:
        go: [1.24, stable]
        os: [ubuntu-latest, macos-latest, windows-latest]
    name: test
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          check-latest: true

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Install Just
        uses: taiki-e/install-action@just

      - name: Install dependencies
        run: |
          go mod download
          go mod verify

      - name: Setup golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest

      - name: Run CI Check
        run: just ci-check

      - name: Upload coverage report
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          check-latest: true

      - name: Build for multiple platforms
        run: |
          # Build for current platform
          go build -v -o opnfocus main.go

          # Cross-compile for other platforms
          GOOS=linux GOARCH=amd64 go build -v -o opnfocus-linux-amd64 main.go
          GOOS=darwin GOARCH=amd64 go build -v -o opnfocus-darwin-amd64 main.go
          GOOS=windows GOARCH=amd64 go build -v -o opnfocus-windows-amd64.exe main.go
