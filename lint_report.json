{"Issues":[{"FromLinter":"funlen","Text":"Function 'TestModeController_ValidateModeConfig' is too long (140 \u003e 100)","Severity":"","SourceLines":["func TestModeController_ValidateModeConfig(t *testing.T) {"],"Pos":{"Filename":"internal/audit/mode_controller_test.go","Offset":2632,"Line":139,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'TestMarkdownConverter_EdgeCases' is too long (172 \u003e 100)","Severity":"","SourceLines":["func TestMarkdownConverter_EdgeCases(t *testing.T) {"],"Pos":{"Filename":"internal/converter/markdown_test.go","Offset":5266,"Line":172,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'TestFileExporter_StandardToolValidation' is too long (123 \u003e 100)","Severity":"","SourceLines":["func TestFileExporter_StandardToolValidation(t *testing.T) {"],"Pos":{"Filename":"internal/export/file_test.go","Offset":25473,"Line":856,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'TestFileExporter_LibraryValidation' is too long (116 \u003e 100)","Severity":"","SourceLines":["func TestFileExporter_LibraryValidation(t *testing.T) {"],"Pos":{"Filename":"internal/export/file_test.go","Offset":29865,"Line":1006,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'TestTemplateRendering' is too long (107 \u003e 100)","Severity":"","SourceLines":["func TestTemplateRendering(t *testing.T) {"],"Pos":{"Filename":"internal/markdown/template_rendering_test.go","Offset":266,"Line":13,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'TestEnrichDocument' is too long (182 \u003e 100)","Severity":"","SourceLines":["func TestEnrichDocument(t *testing.T) {"],"Pos":{"Filename":"internal/model/enrichment_test.go","Offset":121,"Line":10,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'TestOpnSenseDocumentModel_MissingRequiredFieldsValidation' is too long (148 \u003e 100)","Severity":"","SourceLines":["func TestOpnSenseDocumentModel_MissingRequiredFieldsValidation(t *testing.T) {"],"Pos":{"Filename":"internal/model/opnsense_test.go","Offset":8376,"Line":313,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'TestXMLParser_ValidateRequiredElements' is too long (189 \u003e 100)","Severity":"","SourceLines":["func TestXMLParser_ValidateRequiredElements(t *testing.T) {"],"Pos":{"Filename":"internal/parser/validator_test.go","Offset":283,"Line":14,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'TestXMLParser_ValidateInvalidEnumValues' is too long (204 \u003e 100)","Severity":"","SourceLines":["func TestXMLParser_ValidateInvalidEnumValues(t *testing.T) {"],"Pos":{"Filename":"internal/parser/validator_test.go","Offset":5011,"Line":209,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'TestXMLParser_ValidateCrossFieldMismatches' is too long (264 \u003e 100)","Severity":"","SourceLines":["func TestXMLParser_ValidateCrossFieldMismatches(t *testing.T) {"],"Pos":{"Filename":"internal/parser/validator_test.go","Offset":10853,"Line":419,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'TestXMLParser_ParseConfigSample' is too long (124 \u003e 100)","Severity":"","SourceLines":["func TestXMLParser_ParseConfigSample(t *testing.T) {"],"Pos":{"Filename":"internal/parser/xml_test.go","Offset":2654,"Line":103,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'RunChecks' is too long (107 \u003e 100)","Severity":"","SourceLines":["func (fp *Plugin) RunChecks(config *model.OpnSenseDocument) []plugin.Finding {"],"Pos":{"Filename":"internal/plugins/firewall/firewall.go","Offset":4511,"Line":120,"Column":19},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'TestPlugin_hasOverlyPermissiveRules' is too long (201 \u003e 100)","Severity":"","SourceLines":["func TestPlugin_hasOverlyPermissiveRules(t *testing.T) {"],"Pos":{"Filename":"internal/plugins/stig/stig_test.go","Offset":1323,"Line":73,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'TestCoreProcessor_RulesAreEquivalent' is too long (134 \u003e 100)","Severity":"","SourceLines":["func TestCoreProcessor_RulesAreEquivalent(t *testing.T) {"],"Pos":{"Filename":"internal/processor/analyze_test.go","Offset":267,"Line":16,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'TestCoreProcessor_Process' is too long (114 \u003e 100)","Severity":"","SourceLines":["func TestCoreProcessor_Process(t *testing.T) {"],"Pos":{"Filename":"internal/processor/core_test.go","Offset":186,"Line":12,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'TestCoreProcessor_Normalization' is too long (110 \u003e 100)","Severity":"","SourceLines":["func TestCoreProcessor_Normalization(t *testing.T) {"],"Pos":{"Filename":"internal/processor/core_test.go","Offset":5276,"Line":188,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'TestCoreProcessor_Analysis' is too long (140 \u003e 100)","Severity":"","SourceLines":["func TestCoreProcessor_Analysis(t *testing.T) {"],"Pos":{"Filename":"internal/processor/core_test.go","Offset":8797,"Line":312,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'TestCoreProcessor_AnalysisFindings' is too long (225 \u003e 100)","Severity":"","SourceLines":["func TestCoreProcessor_AnalysisFindings(t *testing.T) {"],"Pos":{"Filename":"internal/processor/processor_test.go","Offset":13666,"Line":472,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'TestCoreProcessor_StatisticsAccuracy' is too long (197 \u003e 100)","Severity":"","SourceLines":["func TestCoreProcessor_StatisticsAccuracy(t *testing.T) {"],"Pos":{"Filename":"internal/processor/processor_test.go","Offset":33694,"Line":1248,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'DemoValidation' is too long (104 \u003e 100)","Severity":"","SourceLines":["func DemoValidation() {"],"Pos":{"Filename":"internal/validator/demo.go","Offset":568,"Line":14,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'TestValidateFilter_NetworkValidation' is too long (139 \u003e 100)","Severity":"","SourceLines":["func TestValidateFilter_NetworkValidation(t *testing.T) {"],"Pos":{"Filename":"internal/validator/opnsense_test.go","Offset":2835,"Line":139,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'TestValidateDhcpd_RangeValidation' is too long (121 \u003e 100)","Severity":"","SourceLines":["func TestValidateDhcpd_RangeValidation(t *testing.T) {"],"Pos":{"Filename":"internal/validator/opnsense_test.go","Offset":10316,"Line":511,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'TestInterfaceReferences_TableDriven' is too long (243 \u003e 100)","Severity":"","SourceLines":["func TestInterfaceReferences_TableDriven(t *testing.T) {"],"Pos":{"Filename":"internal/validator/validation_comprehensive_test.go","Offset":293,"Line":13,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'TestValidation_RealWorldScenarios' is too long (145 \u003e 100)","Severity":"","SourceLines":["func TestValidation_RealWorldScenarios(t *testing.T) {"],"Pos":{"Filename":"internal/validator/validation_comprehensive_test.go","Offset":10392,"Line":341,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"funlen","Text":"Function 'TestSampleConfig2_ZeroValidationErrors' is too long (113 \u003e 100)","Severity":"","SourceLines":["func TestSampleConfig2_ZeroValidationErrors(t *testing.T) {"],"Pos":{"Filename":"internal/validator/validation_comprehensive_test.go","Offset":14444,"Line":498,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gochecknoinits","Text":"don't use `init` function","Severity":"","SourceLines":["func init() {"],"Pos":{"Filename":"cmd/convert.go","Offset":2206,"Line":52,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gochecknoinits","Text":"don't use `init` function","Severity":"","SourceLines":["func init() {"],"Pos":{"Filename":"cmd/display.go","Offset":1240,"Line":36,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gochecknoinits","Text":"don't use `init` function","Severity":"","SourceLines":["func init() {"],"Pos":{"Filename":"cmd/root.go","Offset":3229,"Line":91,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gochecknoinits","Text":"don't use `init` function","Severity":"","SourceLines":["func init() {"],"Pos":{"Filename":"cmd/validate.go","Offset":291,"Line":16,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gochecknoinits","Text":"don't use `init` function","Severity":"","SourceLines":["func init() {"],"Pos":{"Filename":"internal/audit/plugin.go","Offset":7196,"Line":262,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 39 of func `TestModeController_GenerateReport` is high (\u003e 20)","Severity":"","SourceLines":["func TestModeController_GenerateReport(t *testing.T) {"],"Pos":{"Filename":"internal/audit/mode_controller_test.go","Offset":5849,"Line":283,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 29 of func `(*Config).Validate` is high (\u003e 20)","Severity":"","SourceLines":["func (c *Config) Validate() error {"],"Pos":{"Filename":"internal/config/config.go","Offset":4888,"Line":129,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 22 of func `(*TerminalDisplay).DisplayWithProgress` is high (\u003e 20)","Severity":"","SourceLines":["func (td *TerminalDisplay) DisplayWithProgress("],"Pos":{"Filename":"internal/display/display.go","Offset":14213,"Line":478,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 24 of func `(*FileExporter).validateExportPath` is high (\u003e 20)","Severity":"","SourceLines":["func (e *FileExporter) validateExportPath(path string) error {"],"Pos":{"Filename":"internal/export/file.go","Offset":1948,"Line":63,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 49 of func `TestGenerateFromXMLFiles` is high (\u003e 20)","Severity":"","SourceLines":["func TestGenerateFromXMLFiles(t *testing.T) {"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":1281,"Line":47,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 64 of func `TestDynamicInterfaceCounting` is high (\u003e 20)","Severity":"","SourceLines":["func TestDynamicInterfaceCounting(t *testing.T) {"],"Pos":{"Filename":"internal/model/enrichment_test.go","Offset":9571,"Line":370,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 88 of func `(*XMLParser).Parse` is high (\u003e 20)","Severity":"","SourceLines":["func (p *XMLParser) Parse(_ context.Context, r io.Reader) (*model.OpnSenseDocument, error) {"],"Pos":{"Filename":"internal/parser/xml.go","Offset":2370,"Line":69,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 30 of func `validateOPNsenseConfig` is high (\u003e 20)","Severity":"","SourceLines":["func validateOPNsenseConfig(t *testing.T, config *model.OpnSenseDocument, _ string) {"],"Pos":{"Filename":"internal/parser/xml_test.go","Offset":7521,"Line":240,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 23 of func `(*Plugin).hasOverlyPermissiveRules` is high (\u003e 20)","Severity":"","SourceLines":["func (sp *Plugin) hasOverlyPermissiveRules(config *model.OpnSenseDocument) bool {"],"Pos":{"Filename":"internal/plugins/stig/stig.go","Offset":7687,"Line":219,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 47 of func `TestCoreProcessor_RealWorldConfigurations` is high (\u003e 20)","Severity":"","SourceLines":["func TestCoreProcessor_RealWorldConfigurations(t *testing.T) {"],"Pos":{"Filename":"internal/processor/analyze_test.go","Offset":4086,"Line":166,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 22 of func `TestCoreProcessor_NormalizationIdempotence` is high (\u003e 20)","Severity":"","SourceLines":["func TestCoreProcessor_NormalizationIdempotence(t *testing.T) {"],"Pos":{"Filename":"internal/processor/processor_test.go","Offset":9399,"Line":327,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 23 of func `BenchmarkCoreProcessor_ProcessLargeConfig` is high (\u003e 20)","Severity":"","SourceLines":["func BenchmarkCoreProcessor_ProcessLargeConfig(b *testing.B) {"],"Pos":{"Filename":"internal/processor/processor_test.go","Offset":25516,"Line":908,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 35 of func `BenchmarkCoreProcessor_ProcessConcurrent` is high (\u003e 20)","Severity":"","SourceLines":["func BenchmarkCoreProcessor_ProcessConcurrent(b *testing.B) {"],"Pos":{"Filename":"internal/processor/processor_test.go","Offset":27897,"Line":998,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 53 of func `TestCoreProcessor_RaceConditions` is high (\u003e 20)","Severity":"","SourceLines":["func TestCoreProcessor_RaceConditions(t *testing.T) {"],"Pos":{"Filename":"internal/processor/processor_test.go","Offset":30614,"Line":1110,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 59 of func `(*Report).ToMarkdown` is high (\u003e 20)","Severity":"","SourceLines":["func (r *Report) ToMarkdown() string {"],"Pos":{"Filename":"internal/processor/report.go","Offset":9160,"Line":274,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 27 of func `generateStatistics` is high (\u003e 20)","Severity":"","SourceLines":["func generateStatistics(cfg *model.OpnSenseDocument) *Statistics {"],"Pos":{"Filename":"internal/processor/report.go","Offset":19442,"Line":628,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 21 of func `BuildSecurityConfig` is high (\u003e 20)","Severity":"","SourceLines":["func BuildSecurityConfig(cfg *model.OpnSenseDocument) string {"],"Pos":{"Filename":"internal/processor/report.go","Offset":31056,"Line":1004,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 31 of func `BuildServiceConfig` is high (\u003e 20)","Severity":"","SourceLines":["func BuildServiceConfig(cfg *model.OpnSenseDocument) string {"],"Pos":{"Filename":"internal/processor/report.go","Offset":34371,"Line":1115,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 31 of func `validateInterface` is high (\u003e 20)","Severity":"","SourceLines":["func validateInterface(iface *model.Interface, name string, interfaces *model.Interfaces) []ValidationError {"],"Pos":{"Filename":"internal/validator/opnsense.go","Offset":5949,"Line":167,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 28 of func `validateDhcpdInterface` is high (\u003e 20)","Severity":"","SourceLines":["func validateDhcpdInterface(name string, cfg model.DhcpdInterface, ifaceSet map[string]struct{}) []ValidationError {"],"Pos":{"Filename":"internal/validator/opnsense.go","Offset":10409,"Line":291,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 28 of func `validateFilter` is high (\u003e 20)","Severity":"","SourceLines":["func validateFilter(filter *model.Filter, interfaces *model.Interfaces) []ValidationError {"],"Pos":{"Filename":"internal/validator/opnsense.go","Offset":13683,"Line":385,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 27 of func `validateUsersAndGroups` is high (\u003e 20)","Severity":"","SourceLines":["func validateUsersAndGroups(system *model.System) []ValidationError {"],"Pos":{"Filename":"internal/validator/opnsense.go","Offset":17330,"Line":481,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 44 of func `walkNode` is high (\u003e 20)","Severity":"","SourceLines":["func walkNode(title string, level int, node any) MDNode {"],"Pos":{"Filename":"internal/walker.go","Offset":1471,"Line":35,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 22 of func `TestWalk_MapHandling` is high (\u003e 20)","Severity":"","SourceLines":["func TestWalk_MapHandling(t *testing.T) {"],"Pos":{"Filename":"internal/walker_test.go","Offset":4334,"Line":186,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocognit","Text":"cognitive complexity 28 of func `TestWalk_SyntheticXMLFragment` is high (\u003e 20)","Severity":"","SourceLines":["func TestWalk_SyntheticXMLFragment(t *testing.T) {"],"Pos":{"Filename":"internal/walker_test.go","Offset":7644,"Line":338,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 190","Severity":"","SourceLines":["\t\t\t\t\tg, err := markdown.NewMarkdownGeneratorWithTemplates(ctxLogger.Logger, opt.TemplateDir)"],"Pos":{"Filename":"cmd/convert.go","Offset":10308,"Line":257,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 190","Severity":"","SourceLines":["\t\t\t\t\tif err := e.Export(timeoutCtx, output, actualOutputFile); err != nil {"],"Pos":{"Filename":"cmd/convert.go","Offset":11957,"Line":305,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 546","Severity":"","SourceLines":["\t\t\tresponse, err := reader.ReadString('\\n')"],"Pos":{"Filename":"cmd/convert.go","Offset":19772,"Line":555,"Column":14},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"rootCmd\" shadows declaration at line 20","Severity":"","SourceLines":["\trootCmd := GetRootCmd()"],"Pos":{"Filename":"cmd/convert_test.go","Offset":367,"Line":18,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"convertCmd\" shadows declaration at line 71","Severity":"","SourceLines":["\tconvertCmd := findCommand(rootCmd)"],"Pos":{"Filename":"cmd/convert_test.go","Offset":392,"Line":19,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"rootCmd\" shadows declaration at line 20","Severity":"","SourceLines":["\trootCmd := GetRootCmd()"],"Pos":{"Filename":"cmd/convert_test.go","Offset":628,"Line":26,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"convertCmd\" shadows declaration at line 71","Severity":"","SourceLines":["\tconvertCmd := findCommand(rootCmd)"],"Pos":{"Filename":"cmd/convert_test.go","Offset":653,"Line":27,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"rootCmd\" shadows declaration at line 20","Severity":"","SourceLines":["\trootCmd := GetRootCmd()"],"Pos":{"Filename":"cmd/convert_test.go","Offset":1524,"Line":62,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"convertCmd\" shadows declaration at line 71","Severity":"","SourceLines":["\tconvertCmd := findCommand(rootCmd)"],"Pos":{"Filename":"cmd/convert_test.go","Offset":1549,"Line":63,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"rootCmd\" shadows declaration at line 20","Severity":"","SourceLines":["\trootCmd := GetRootCmd()"],"Pos":{"Filename":"cmd/convert_test.go","Offset":1895,"Line":73,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"convertCmd\" shadows declaration at line 71","Severity":"","SourceLines":["\tconvertCmd := findCommand(rootCmd)"],"Pos":{"Filename":"cmd/convert_test.go","Offset":1920,"Line":74,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"rootCmd\" shadows declaration at line 20","Severity":"","SourceLines":["\trootCmd := GetRootCmd()"],"Pos":{"Filename":"cmd/convert_test.go","Offset":5112,"Line":217,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"rootCmd\" shadows declaration at line 20","Severity":"","SourceLines":["\trootCmd := GetRootCmd()"],"Pos":{"Filename":"cmd/convert_test.go","Offset":5867,"Line":247,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 357","Severity":"","SourceLines":["\t\t\tpath, err := determineOutputPath(\"config.xml\", tt.outputFile, \".md\", nil, tt.force)"],"Pos":{"Filename":"cmd/convert_test.go","Offset":9317,"Line":385,"Column":10},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 123","Severity":"","SourceLines":["\t\tif err := displayer.DisplayWithProgress(ctx, md, progressCh); err != nil {"],"Pos":{"Filename":"cmd/display.go","Offset":7875,"Line":216,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"rootCmd\" shadows declaration at line 20","Severity":"","SourceLines":["\trootCmd := GetRootCmd()"],"Pos":{"Filename":"cmd/root_test.go","Offset":203,"Line":15,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"rootCmd\" shadows declaration at line 20","Severity":"","SourceLines":["\trootCmd := GetRootCmd()"],"Pos":{"Filename":"cmd/root_test.go","Offset":430,"Line":22,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"rootCmd\" shadows declaration at line 20","Severity":"","SourceLines":["\trootCmd := GetRootCmd()"],"Pos":{"Filename":"cmd/root_test.go","Offset":1413,"Line":59,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"rootCmd\" shadows declaration at line 20","Severity":"","SourceLines":["\trootCmd := GetRootCmd()"],"Pos":{"Filename":"cmd/root_test.go","Offset":2042,"Line":83,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"logger\" shadows declaration at line 16","Severity":"","SourceLines":["\tlogger := GetLogger()"],"Pos":{"Filename":"cmd/root_test.go","Offset":2596,"Line":102,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 116","Severity":"","SourceLines":["\t\terr := os.Remove(tmpFile.Name())"],"Pos":{"Filename":"cmd/root_test.go","Offset":3135,"Line":120,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"rootCmd\" shadows declaration at line 20","Severity":"","SourceLines":["\trootCmd := GetRootCmd()"],"Pos":{"Filename":"cmd/root_test.go","Offset":3618,"Line":144,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 161","Severity":"","SourceLines":["\t\terr := os.Remove(tmpFile.Name())"],"Pos":{"Filename":"cmd/root_test.go","Offset":4236,"Line":165,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"rootCmd\" shadows declaration at line 20","Severity":"","SourceLines":["\trootCmd := GetRootCmd()"],"Pos":{"Filename":"cmd/root_test.go","Offset":4577,"Line":181,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 195","Severity":"","SourceLines":["\t\terr := os.Remove(tmpFile.Name())"],"Pos":{"Filename":"cmd/root_test.go","Offset":5181,"Line":199,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"rootCmd\" shadows declaration at line 20","Severity":"","SourceLines":["\trootCmd := GetRootCmd()"],"Pos":{"Filename":"cmd/root_test.go","Offset":5551,"Line":216,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 74","Severity":"","SourceLines":["\t\tp, err := pluginlib.Open(path)"],"Pos":{"Filename":"internal/audit/plugin.go","Offset":2252,"Line":87,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 87","Severity":"","SourceLines":["\t\tif err := pr.RegisterPlugin(compliancePlugin); err != nil {"],"Pos":{"Filename":"internal/audit/plugin.go","Offset":2736,"Line":105,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 17","Severity":"","SourceLines":["\t\t_, err := converter.ToMarkdown(ctx, opnsense)"],"Pos":{"Filename":"internal/converter/benchmark_test.go","Offset":754,"Line":36,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 47","Severity":"","SourceLines":["\t\t_, err := converter.ToMarkdown(ctx, opnsense)"],"Pos":{"Filename":"internal/converter/benchmark_test.go","Offset":1489,"Line":66,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 245","Severity":"","SourceLines":["\t\tif err := w.Close(); err != nil {"],"Pos":{"Filename":"internal/display/display_test.go","Offset":6034,"Line":253,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 245","Severity":"","SourceLines":["\tif err := w.Close(); err != nil {"],"Pos":{"Filename":"internal/display/display_test.go","Offset":6257,"Line":263,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 301","Severity":"","SourceLines":["\t\tif err := w.Close(); err != nil {"],"Pos":{"Filename":"internal/display/display_test.go","Offset":7447,"Line":309,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 301","Severity":"","SourceLines":["\tif err := w.Close(); err != nil {"],"Pos":{"Filename":"internal/display/display_test.go","Offset":7670,"Line":319,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 362","Severity":"","SourceLines":["\t\tif err := w.Close(); err != nil {"],"Pos":{"Filename":"internal/display/display_test.go","Offset":9231,"Line":370,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 362","Severity":"","SourceLines":["\t\terr := td.DisplayWithProgress(context.Background(), markdownContent, progressCh)"],"Pos":{"Filename":"internal/display/display_test.go","Offset":9390,"Line":379,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 362","Severity":"","SourceLines":["\tif err := w.Close(); err != nil {"],"Pos":{"Filename":"internal/display/display_test.go","Offset":9727,"Line":393,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 442","Severity":"","SourceLines":["\t\tif err := w.Close(); err != nil {"],"Pos":{"Filename":"internal/display/display_test.go","Offset":11367,"Line":450,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 442","Severity":"","SourceLines":["\t\terr := td.DisplayWithProgress(context.Background(), markdownContent, progressCh)"],"Pos":{"Filename":"internal/display/display_test.go","Offset":11526,"Line":459,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 442","Severity":"","SourceLines":["\tif err := w.Close(); err != nil {"],"Pos":{"Filename":"internal/display/display_test.go","Offset":11863,"Line":473,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 90","Severity":"","SourceLines":["\t\tdirInfo, err := os.Stat(dir)"],"Pos":{"Filename":"internal/export/file.go","Offset":3156,"Line":103,"Column":12},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 103","Severity":"","SourceLines":["\t\tif err := e.checkDirectoryWritable(dir); err != nil {"],"Pos":{"Filename":"internal/export/file.go","Offset":3780,"Line":132,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 90","Severity":"","SourceLines":["\tif fileInfo, err := os.Stat(absPath); err == nil {"],"Pos":{"Filename":"internal/export/file.go","Offset":4049,"Line":143,"Column":15},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 143","Severity":"","SourceLines":["\t\tif err := e.checkFileWritable(absPath, fileInfo); err != nil {"],"Pos":{"Filename":"internal/export/file.go","Offset":4133,"Line":145,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 258","Severity":"","SourceLines":["\tif _, err := tempFile.Write(content); err != nil {"],"Pos":{"Filename":"internal/export/file.go","Offset":7894,"Line":281,"Column":8},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 258","Severity":"","SourceLines":["\tif err := tempFile.Sync(); err != nil {"],"Pos":{"Filename":"internal/export/file.go","Offset":8051,"Line":286,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 258","Severity":"","SourceLines":["\tif err := tempFile.Close(); err != nil {"],"Pos":{"Filename":"internal/export/file.go","Offset":8203,"Line":291,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 258","Severity":"","SourceLines":["\tif err := os.Chmod(tempPath, DefaultFilePermissions); err != nil {"],"Pos":{"Filename":"internal/export/file.go","Offset":8406,"Line":298,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 258","Severity":"","SourceLines":["\tif err := os.Rename(tempPath, path); err != nil {"],"Pos":{"Filename":"internal/export/file.go","Offset":8597,"Line":303,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 69","Severity":"","SourceLines":["\t\t\tabsPath, err := filepath.Abs(path)"],"Pos":{"Filename":"internal/export/file_test.go","Offset":1976,"Line":71,"Column":13},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 115","Severity":"","SourceLines":["\t\t\t\tcontent, err := os.ReadFile(tt.path)"],"Pos":{"Filename":"internal/export/file_test.go","Offset":2980,"Line":121,"Column":14},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 1054","Severity":"","SourceLines":["\t\t\t\tif err := json.Unmarshal(content, \u0026arrayResult); err != nil {"],"Pos":{"Filename":"internal/export/file_test.go","Offset":31796,"Line":1066,"Column":8},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 1087","Severity":"","SourceLines":["\t\t\t\tif err := yaml.Unmarshal(content, \u0026arrayResult); err != nil {"],"Pos":{"Filename":"internal/export/file_test.go","Offset":32863,"Line":1094,"Column":8},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 149","Severity":"","SourceLines":["\t\t\t\t\terr := json.Unmarshal([]byte(line), \u0026jsonData)"],"Pos":{"Filename":"internal/log/logger_test.go","Offset":3751,"Line":173,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 27","Severity":"","SourceLines":["\t\tresult, err := generator.Generate(ctx, nil, opts)"],"Pos":{"Filename":"internal/markdown/generator_test.go","Offset":778,"Line":34,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 27","Severity":"","SourceLines":["\t\tresult, err := generator.Generate(ctx, cfg, opts)"],"Pos":{"Filename":"internal/markdown/generator_test.go","Offset":1076,"Line":46,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 27","Severity":"","SourceLines":["\t\tresult, err := generator.Generate(ctx, cfg, opts)"],"Pos":{"Filename":"internal/markdown/generator_test.go","Offset":1470,"Line":60,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 27","Severity":"","SourceLines":["\t\tresult, err := generator.Generate(ctx, cfg, opts)"],"Pos":{"Filename":"internal/markdown/generator_test.go","Offset":1897,"Line":75,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 27","Severity":"","SourceLines":["\t\tresult, err := generator.Generate(ctx, cfg, opts)"],"Pos":{"Filename":"internal/markdown/generator_test.go","Offset":2278,"Line":90,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 27","Severity":"","SourceLines":["\t\tresult, err := generator.Generate(ctx, cfg, opts)"],"Pos":{"Filename":"internal/markdown/generator_test.go","Offset":2659,"Line":105,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 27","Severity":"","SourceLines":["\t\tresult, err := generator.Generate(ctx, cfg, opts)"],"Pos":{"Filename":"internal/markdown/generator_test.go","Offset":2947,"Line":115,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 20","Severity":"","SourceLines":["\t\tif _, err := tmpFile.WriteString(content); err != nil {"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":632,"Line":25,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 25","Severity":"","SourceLines":["\t\t\tif err := tmpFile.Close(); err != nil {"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":688,"Line":26,"Column":7},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 25","Severity":"","SourceLines":["\t\t\tif err := os.Remove(tmpFile.Name()); err != nil {"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":787,"Line":29,"Column":7},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 20","Severity":"","SourceLines":["\t\tif err := tmpFile.Close(); err != nil {"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":948,"Line":34,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 20","Severity":"","SourceLines":["\t\t\tif err := os.Remove(tmpFile.Name()); err != nil {"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":1080,"Line":39,"Column":7},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 51","Severity":"","SourceLines":["\t\t\tif _, err := os.Stat(tt.xmlFile); os.IsNotExist(err) {"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":5140,"Line":193,"Column":10},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 51","Severity":"","SourceLines":["\t\t\txmlFile, err := os.Open(tt.xmlFile)"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":5307,"Line":199,"Column":13},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 199","Severity":"","SourceLines":["\t\t\t\terr := xmlFile.Close()"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":5427,"Line":203,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 199","Severity":"","SourceLines":["\t\t\t\tgenerator, err := NewMarkdownGenerator(nil)"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":5865,"Line":216,"Column":16},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 199","Severity":"","SourceLines":["\t\t\t\tgenerator, err := NewMarkdownGenerator(nil)"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":8092,"Line":273,"Column":16},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 199","Severity":"","SourceLines":["\t\t\t\tgenerator, err := NewMarkdownGenerator(nil)"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":9000,"Line":298,"Column":16},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 335","Severity":"","SourceLines":["\t\t\t\tif err := tmpFile.Close(); err != nil {"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":10283,"Line":339,"Column":8},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 335","Severity":"","SourceLines":["\t\t\t\t\tif err := os.Remove(tmpFile.Name()); err != nil {"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":10423,"Line":344,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 376","Severity":"","SourceLines":["\t\t\t\terr := xmlFile.Close()"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":11335,"Line":380,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 414","Severity":"","SourceLines":["\t\terr := xmlFile.Close()"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":12497,"Line":418,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 470","Severity":"","SourceLines":["\t\tif err := xmlFile.Close(); err != nil {"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":14448,"Line":474,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 535","Severity":"","SourceLines":["\t\tif err := xmlFile.Close(); err != nil {"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":16666,"Line":539,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 571","Severity":"","SourceLines":["\t\tif err := xmlFile.Close(); err != nil {"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":18158,"Line":575,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 34","Severity":"","SourceLines":["\t\tgenerator, err := NewMarkdownGeneratorWithTemplates(nil, tempDir)"],"Pos":{"Filename":"internal/markdown/template_override_test.go","Offset":1259,"Line":47,"Column":14},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 34","Severity":"","SourceLines":["\t\tgenerator, err := NewMarkdownGeneratorWithTemplates(nil, tempDir)"],"Pos":{"Filename":"internal/markdown/template_override_test.go","Offset":2150,"Line":68,"Column":14},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 95","Severity":"","SourceLines":["\t\tgenerator, err := NewMarkdownGeneratorWithTemplates(nil, tempDir)"],"Pos":{"Filename":"internal/markdown/template_override_test.go","Offset":4159,"Line":126,"Column":14},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 20","Severity":"","SourceLines":["\t\t\tif err := decoder.DecodeElement(\u0026dhcpIface, \u0026se); err != nil {"],"Pos":{"Filename":"internal/model/dhcp.go","Offset":887,"Line":29,"Column":7},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 66","Severity":"","SourceLines":["\t\t\tif err := d.DecodeElement(\u0026iface, \u0026se); err != nil {"],"Pos":{"Filename":"internal/model/interfaces.go","Offset":3091,"Line":75,"Column":7},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 577","Severity":"","SourceLines":["\t\t\tdata, err := os.ReadFile(file)"],"Pos":{"Filename":"internal/model/opnsense_test.go","Offset":15613,"Line":596,"Column":10},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 46","Severity":"","SourceLines":["\t\tif err := file.Close(); err != nil {"],"Pos":{"Filename":"internal/parser/benchmark_test.go","Offset":1204,"Line":52,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 46","Severity":"","SourceLines":["\t\t_, err := parser.Parse(context.Background(), bytes.NewReader(data))"],"Pos":{"Filename":"internal/parser/benchmark_test.go","Offset":1388,"Line":63,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 92","Severity":"","SourceLines":["\t\t\t\tif err := dec.DecodeElement(\u0026doc.Version, \u0026se); err != nil {"],"Pos":{"Filename":"internal/parser/xml.go","Offset":3870,"Line":124,"Column":8},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 92","Severity":"","SourceLines":["\t\t\t\tif err := dec.DecodeElement(\u0026doc.TriggerInitialWizard, \u0026se); err != nil {"],"Pos":{"Filename":"internal/parser/xml.go","Offset":4040,"Line":128,"Column":8},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 92","Severity":"","SourceLines":["\t\t\t\tif err := dec.DecodeElement(\u0026doc.Theme, \u0026se); err != nil {"],"Pos":{"Filename":"internal/parser/xml.go","Offset":4221,"Line":132,"Column":8},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 92","Severity":"","SourceLines":["\t\t\t\tif err := dec.DecodeElement(\u0026system, \u0026se); err != nil {"],"Pos":{"Filename":"internal/parser/xml.go","Offset":4399,"Line":137,"Column":8},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 92","Severity":"","SourceLines":["\t\t\t\tif err := dec.DecodeElement(\u0026interfaces, \u0026se); err != nil {"],"Pos":{"Filename":"internal/parser/xml.go","Offset":4695,"Line":146,"Column":8},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 92","Severity":"","SourceLines":["\t\t\t\tif err := dec.DecodeElement(\u0026dhcpd, \u0026se); err != nil {"],"Pos":{"Filename":"internal/parser/xml.go","Offset":4909,"Line":153,"Column":8},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 92","Severity":"","SourceLines":["\t\t\t\tif err := dec.DecodeElement(\u0026container, \u0026se); err == nil {"],"Pos":{"Filename":"internal/parser/xml.go","Offset":5233,"Line":163,"Column":8},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 163","Severity":"","SourceLines":["\t\t\t\t\tif err := skipElement(dec); err != nil {"],"Pos":{"Filename":"internal/parser/xml.go","Offset":5435,"Line":167,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 92","Severity":"","SourceLines":["\t\t\t\tif err := dec.DecodeElement(\u0026unbound, \u0026se); err != nil {"],"Pos":{"Filename":"internal/parser/xml.go","Offset":5631,"Line":175,"Column":8},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 92","Severity":"","SourceLines":["\t\t\t\tif err := dec.DecodeElement(\u0026snmpd, \u0026se); err != nil {"],"Pos":{"Filename":"internal/parser/xml.go","Offset":5833,"Line":182,"Column":8},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 92","Severity":"","SourceLines":["\t\t\t\tif err := dec.DecodeElement(\u0026nat, \u0026se); err != nil {"],"Pos":{"Filename":"internal/parser/xml.go","Offset":6021,"Line":189,"Column":8},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 92","Severity":"","SourceLines":["\t\t\t\tif err := dec.DecodeElement(\u0026filter, \u0026se); err != nil {"],"Pos":{"Filename":"internal/parser/xml.go","Offset":6210,"Line":196,"Column":8},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 92","Severity":"","SourceLines":["\t\t\t\tif err := dec.DecodeElement(\u0026rrd, \u0026se); err != nil {"],"Pos":{"Filename":"internal/parser/xml.go","Offset":6402,"Line":203,"Column":8},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 92","Severity":"","SourceLines":["\t\t\t\tif err := dec.DecodeElement(\u0026loadBalancer, \u0026se); err != nil {"],"Pos":{"Filename":"internal/parser/xml.go","Offset":6610,"Line":210,"Column":8},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 92","Severity":"","SourceLines":["\t\t\t\tif err := dec.DecodeElement(\u0026ntpd, \u0026se); err != nil {"],"Pos":{"Filename":"internal/parser/xml.go","Offset":6830,"Line":217,"Column":8},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 92","Severity":"","SourceLines":["\t\t\t\tif err := skipElement(dec); err != nil {"],"Pos":{"Filename":"internal/parser/xml.go","Offset":7060,"Line":224,"Column":8},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 257","Severity":"","SourceLines":["\tif err := p.Validate(cfg); err != nil {"],"Pos":{"Filename":"internal/parser/xml.go","Offset":8243,"Line":262,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 75","Severity":"","SourceLines":["\t\t\tfile, err := os.Open(sampleFile)"],"Pos":{"Filename":"internal/parser/xml_test.go","Offset":2122,"Line":87,"Column":10},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 636","Severity":"","SourceLines":["\t\tfile, err := os.Open(xmlFile)"],"Pos":{"Filename":"internal/parser/xml_test.go","Offset":20523,"Line":663,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 663","Severity":"","SourceLines":["\t\t\tif err := file.Close(); err != nil {"],"Pos":{"Filename":"internal/parser/xml_test.go","Offset":20717,"Line":673,"Column":7},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 663","Severity":"","SourceLines":["\t\tif err := file.Close(); err != nil {"],"Pos":{"Filename":"internal/parser/xml_test.go","Offset":20836,"Line":680,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 167","Severity":"","SourceLines":["\t\t\tfile, err := os.Open(testFile)"],"Pos":{"Filename":"internal/processor/analyze_test.go","Offset":4482,"Line":179,"Column":10},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 13","Severity":"","SourceLines":["\t\treport, err := processor.Process(ctx, cfg)"],"Pos":{"Filename":"internal/processor/core_test.go","Offset":1312,"Line":58,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 13","Severity":"","SourceLines":["\t\treport, err := processor.Process(ctx, cfg, WithSecurityAnalysis())"],"Pos":{"Filename":"internal/processor/core_test.go","Offset":1684,"Line":68,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 13","Severity":"","SourceLines":["\t\treport, err := processor.Process(ctx, cfg, WithDeadRuleCheck())"],"Pos":{"Filename":"internal/processor/core_test.go","Offset":2621,"Line":99,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 13","Severity":"","SourceLines":["\t\treport, err := processor.Process(ctx, cfg, WithAllFeatures())"],"Pos":{"Filename":"internal/processor/core_test.go","Offset":3150,"Line":117,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 13","Severity":"","SourceLines":["\t\t_, err := processor.Process(ctx, nil)"],"Pos":{"Filename":"internal/processor/core_test.go","Offset":3637,"Line":128,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 135","Severity":"","SourceLines":["\t\tresult, err := processor.Transform(ctx, report, \"json\")"],"Pos":{"Filename":"internal/processor/core_test.go","Offset":4350,"Line":158,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 135","Severity":"","SourceLines":["\t\tresult, err := processor.Transform(ctx, report, \"yaml\")"],"Pos":{"Filename":"internal/processor/core_test.go","Offset":4607,"Line":166,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 135","Severity":"","SourceLines":["\t\tresult, err := processor.Transform(ctx, report, \"markdown\")"],"Pos":{"Filename":"internal/processor/core_test.go","Offset":4868,"Line":174,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 135","Severity":"","SourceLines":["\t\t_, err := processor.Transform(ctx, report, \"xml\")"],"Pos":{"Filename":"internal/processor/core_test.go","Offset":5138,"Line":182,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 313","Severity":"","SourceLines":["\t\treport, err := processor.Process(ctx, cfg, WithDeadRuleCheck())"],"Pos":{"Filename":"internal/processor/core_test.go","Offset":9627,"Line":348,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 313","Severity":"","SourceLines":["\t\treport, err := processor.Process(ctx, cfg, WithDeadRuleCheck())"],"Pos":{"Filename":"internal/processor/core_test.go","Offset":10754,"Line":396,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 313","Severity":"","SourceLines":["\t\treport, err := processor.Process(ctx, cfg, WithComplianceCheck())"],"Pos":{"Filename":"internal/processor/core_test.go","Offset":11722,"Line":441,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 473","Severity":"","SourceLines":["\t\t\treport, err := processor.Process(ctx, tt.config, tt.options...)"],"Pos":{"Filename":"internal/processor/processor_test.go","Offset":19232,"Line":676,"Column":12},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 878","Severity":"","SourceLines":["\t\treport, err := processor.Process(ctx, smallConfig, WithAllFeatures())"],"Pos":{"Filename":"internal/processor/processor_test.go","Offset":24987,"Line":886,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 909","Severity":"","SourceLines":["\t\treport, err := processor.Process(ctx, largeConfig, WithAllFeatures())"],"Pos":{"Filename":"internal/processor/processor_test.go","Offset":25896,"Line":922,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 999","Severity":"","SourceLines":["\t\t\t\treport, err := processor.Process(ctx, smallConfig, WithStats())"],"Pos":{"Filename":"internal/processor/processor_test.go","Offset":28279,"Line":1010,"Column":13},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 999","Severity":"","SourceLines":["\t\t\t\treport, err := processor.Process(ctx, config, WithAllFeatures())"],"Pos":{"Filename":"internal/processor/processor_test.go","Offset":29047,"Line":1047,"Column":13},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 1111","Severity":"","SourceLines":["\t\t\t\treport, err := localProcessor.Process(ctx, smallConfig, WithAllFeatures())"],"Pos":{"Filename":"internal/processor/processor_test.go","Offset":31099,"Line":1130,"Column":13},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 1111","Severity":"","SourceLines":["\t\t\t\treport, err := localProcessor.Process(ctx, config, WithAllFeatures())"],"Pos":{"Filename":"internal/processor/processor_test.go","Offset":32191,"Line":1181,"Column":13},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"localProcessor\" shadows declaration at line 1111","Severity":"","SourceLines":["\t\t\t\tlocalProcessor, err := NewCoreProcessor()"],"Pos":{"Filename":"internal/processor/processor_test.go","Offset":33053,"Line":1219,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"shadow: declaration of \"err\" shadows declaration at line 1249","Severity":"","SourceLines":["\t\t\treport, err := processor.Process(ctx, tt.config, WithStats())"],"Pos":{"Filename":"internal/processor/processor_test.go","Offset":41702,"Line":1451,"Column":12},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"musttag","Text":"the given struct should be annotated with the `json` tag","Severity":"","SourceLines":["\tjsonBytes, err := json.MarshalIndent(opnsense, \"\", \"  \")"],"Pos":{"Filename":"internal/converter/json.go","Offset":816,"Line":27,"Column":39},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"musttag","Text":"the given struct should be annotated with the `yaml` tag","Severity":"","SourceLines":["\tyamlBytes, err := yaml.Marshal(opnsense)"],"Pos":{"Filename":"internal/converter/yaml.go","Offset":798,"Line":27,"Column":33},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"musttag","Text":"the given struct should be annotated with the `json` tag","Severity":"","SourceLines":["\t\tconfigJSON, err := json.Marshal(cfg)"],"Pos":{"Filename":"internal/markdown/generator.go","Offset":7710,"Line":251,"Column":35},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"musttag","Text":"the given struct should be annotated with the `json` tag","Severity":"","SourceLines":["\tdata, err := json.MarshalIndent(r, \"\", \"  \")"],"Pos":{"Filename":"internal/processor/report.go","Offset":8705,"Line":255,"Column":34},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"musttag","Text":"the given struct should be annotated with the `yaml` tag","Severity":"","SourceLines":["\tdata, err := yaml.Marshal(r)"],"Pos":{"Filename":"internal/processor/report.go","Offset":8955,"Line":265,"Column":28},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"musttag","Text":"the given struct should be annotated with the `yaml` tag","Severity":"","SourceLines":["\tdata, err := yaml.Marshal(report)"],"Pos":{"Filename":"internal/processor/transform.go","Offset":259,"Line":13,"Column":28},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"nestif","Text":"`if err == nil` has complex nested blocks (complexity: 7)","Severity":"","SourceLines":["\tif _, err := os.Stat(actualOutputFile); err == nil {"],"Pos":{"Filename":"cmd/convert.go","Offset":19340,"Line":546,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"nestif","Text":"`if !tt.wantErr` has complex nested blocks (complexity: 6)","Severity":"","SourceLines":["\t\t\tif !tt.wantErr {"],"Pos":{"Filename":"internal/audit/mode_controller_test.go","Offset":7547,"Line":371,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"nestif","Text":"`if dir != \".\" \u0026\u0026 dir != \"\"` has complex nested blocks (complexity: 5)","Severity":"","SourceLines":["\tif dir != \".\" \u0026\u0026 dir != \"\" {"],"Pos":{"Filename":"internal/export/file.go","Offset":3115,"Line":102,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"nestif","Text":"`if rule.Type == \"pass\"` has complex nested blocks (complexity: 5)","Severity":"","SourceLines":["\t\tif rule.Type == \"pass\" {"],"Pos":{"Filename":"internal/plugins/stig/stig.go","Offset":7878,"Line":224,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"nestif","Text":"`if rule.Source.Network != \"\" \u0026\u0026 !isSpecialNetworkType(rule.Source.Network)` has complex nested blocks (complexity: 5)","Severity":"","SourceLines":["\t\tif rule.Source.Network != \"\" \u0026\u0026 !isSpecialNetworkType(rule.Source.Network) {"],"Pos":{"Filename":"internal/processor/normalize.go","Offset":2557,"Line":82,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"nestif","Text":"`if r.Statistics != nil` has complex nested blocks (complexity: 13)","Severity":"","SourceLines":["\tif r.Statistics != nil {"],"Pos":{"Filename":"internal/processor/report.go","Offset":9997,"Line":303,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"nestif","Text":"`if totalFindings == 0` has complex nested blocks (complexity: 6)","Severity":"","SourceLines":["\tif totalFindings == 0 {"],"Pos":{"Filename":"internal/processor/report.go","Offset":17110,"Line":554,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"nestif","Text":"`if iface.IPAddrv6 == \"track6\"` has complex nested blocks (complexity: 5)","Severity":"","SourceLines":["\tif iface.IPAddrv6 == \"track6\" {"],"Pos":{"Filename":"internal/validator/opnsense.go","Offset":8200,"Line":234,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"nestif","Text":"`if cfg.Range.From != \"\" || cfg.Range.To != \"\"` has complex nested blocks (complexity: 9)","Severity":"","SourceLines":["\tif cfg.Range.From != \"\" || cfg.Range.To != \"\" {"],"Pos":{"Filename":"internal/validator/opnsense.go","Offset":11121,"Line":309,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"recvcheck","Text":"the methods of \"BoolFlag\" use pointer receiver and non-pointer receiver.","Severity":"","SourceLines":["type BoolFlag bool"],"Pos":{"Filename":"internal/model/common.go","Offset":354,"Line":13,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: struct field IgnoreAcquireTs should be IgnoreAcquireTS","Severity":"","SourceLines":["\t\tIgnoreAcquireTs    string `xml:\"ignore_acquire_ts\"`"],"Pos":{"Filename":"internal/model/security.go","Offset":6420,"Line":177,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Strict_order should be StrictOrder","Severity":"","SourceLines":["\tStrict_order       BoolFlag         `xml:\"strict_order,omitempty\"`       //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/services.go","Offset":2460,"Line":69,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Domain_needed should be DomainNeeded","Severity":"","SourceLines":["\tDomain_needed      BoolFlag         `xml:\"domain_needed,omitempty\"`      //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/services.go","Offset":2588,"Line":70,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field No_private_reverse should be NoPrivateReverse","Severity":"","SourceLines":["\tNo_private_reverse BoolFlag         `xml:\"no_private_reverse,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/services.go","Offset":2716,"Line":71,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Custom_options should be CustomOptions","Severity":"","SourceLines":["\tCustom_options     string           `xml:\"custom_options,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/services.go","Offset":2904,"Line":73,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: struct field Gid should be GID","Severity":"","SourceLines":["\tGid         string `xml:\"gid\"         json:\"gid\"                   yaml:\"gid\"                   validate:\"required,numeric\"`"],"Pos":{"Filename":"internal/model/system.go","Offset":8729,"Line":100,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use ALL_CAPS in Go names; use CamelCase instead","Severity":"","SourceLines":["\tVPN_ID            string   `xml:\"vpnid,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":737,"Line":20,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Dev_mode should be DevMode","Severity":"","SourceLines":["\tDev_mode          string   `xml:\"dev_mode,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":949,"Line":23,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Local_port should be LocalPort","Severity":"","SourceLines":["\tLocal_port        string   `xml:\"local_port,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":1114,"Line":25,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Custom_options should be CustomOptions","Severity":"","SourceLines":["\tCustom_options    string   `xml:\"custom_options,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":1283,"Line":27,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field TLS_type should be TLSType","Severity":"","SourceLines":["\tTLS_type          string   `xml:\"tls_type,omitempty\"`   //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":1448,"Line":29,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Cert_ref should be CertRef","Severity":"","SourceLines":["\tCert_ref          string   `xml:\"certref,omitempty\"`    //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":1559,"Line":30,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field CA_ref should be CARef","Severity":"","SourceLines":["\tCA_ref            string   `xml:\"caref,omitempty\"`      //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":1670,"Line":31,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field CRL_ref should be CRLRef","Severity":"","SourceLines":["\tCRL_ref           string   `xml:\"crlref,omitempty\"`     //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":1781,"Line":32,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field DH_length should be DHLength","Severity":"","SourceLines":["\tDH_length         string   `xml:\"dh_length,omitempty\"`  //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":1892,"Line":33,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Ecdh_curve should be EcdhCurve","Severity":"","SourceLines":["\tEcdh_curve        string   `xml:\"ecdh_curve,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":2003,"Line":34,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Cert_depth should be CertDepth","Severity":"","SourceLines":["\tCert_depth        string   `xml:\"cert_depth,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":2114,"Line":35,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Tunnel_network should be TunnelNetwork","Severity":"","SourceLines":["\tTunnel_network    string   `xml:\"tunnel_network,omitempty\"`   //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":2284,"Line":37,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Tunnel_networkv6 should be TunnelNetworkv6","Severity":"","SourceLines":["\tTunnel_networkv6  string   `xml:\"tunnel_networkv6,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":2401,"Line":38,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Remote_network should be RemoteNetwork","Severity":"","SourceLines":["\tRemote_network    string   `xml:\"remote_network,omitempty\"`   //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":2518,"Line":39,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Remote_networkv6 should be RemoteNetworkv6","Severity":"","SourceLines":["\tRemote_networkv6  string   `xml:\"remote_networkv6,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":2635,"Line":40,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Local_network should be LocalNetwork","Severity":"","SourceLines":["\tLocal_network     string   `xml:\"local_network,omitempty\"`   //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":2806,"Line":42,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Local_networkv6 should be LocalNetworkv6","Severity":"","SourceLines":["\tLocal_networkv6   string   `xml:\"local_networkv6,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":2922,"Line":43,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Dynamic_ip should be DynamicIP","Severity":"","SourceLines":["\tDynamic_ip        BoolFlag `xml:\"dynamic_ip,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":3267,"Line":48,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Serverbridge_dhcp should be ServerbridgeDhcp","Severity":"","SourceLines":["\tServerbridge_dhcp BoolFlag `xml:\"serverbridge_dhcp,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":3433,"Line":50,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field DNS_domain should be DNSDomain","Severity":"","SourceLines":["\tDNS_domain        string   `xml:\"dns_domain,omitempty\"`        //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":3551,"Line":51,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field DNS_server1 should be DNSServer1","Severity":"","SourceLines":["\tDNS_server1       string   `xml:\"dns_server1,omitempty\"`       //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":3669,"Line":52,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field DNS_server2 should be DNSServer2","Severity":"","SourceLines":["\tDNS_server2       string   `xml:\"dns_server2,omitempty\"`       //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":3787,"Line":53,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field DNS_server3 should be DNSServer3","Severity":"","SourceLines":["\tDNS_server3       string   `xml:\"dns_server3,omitempty\"`       //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":3905,"Line":54,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field DNS_server4 should be DNSServer4","Severity":"","SourceLines":["\tDNS_server4       string   `xml:\"dns_server4,omitempty\"`       //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":4023,"Line":55,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Push_register_dns should be PushRegisterDNS","Severity":"","SourceLines":["\tPush_register_dns BoolFlag `xml:\"push_register_dns,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":4141,"Line":56,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field NTP_server1 should be NTPServer1","Severity":"","SourceLines":["\tNTP_server1       string   `xml:\"ntp_server1,omitempty\"`       //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":4259,"Line":57,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field NTP_server2 should be NTPServer2","Severity":"","SourceLines":["\tNTP_server2       string   `xml:\"ntp_server2,omitempty\"`       //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":4377,"Line":58,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Netbios_enable should be NetbiosEnable","Severity":"","SourceLines":["\tNetbios_enable    BoolFlag `xml:\"netbios_enable,omitempty\"`    //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":4495,"Line":59,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Netbios_ntype should be NetbiosNtype","Severity":"","SourceLines":["\tNetbios_ntype     string   `xml:\"netbios_ntype,omitempty\"`     //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":4613,"Line":60,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Netbios_scope should be NetbiosScope","Severity":"","SourceLines":["\tNetbios_scope     string   `xml:\"netbios_scope,omitempty\"`     //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":4731,"Line":61,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Verbosity_level should be VerbosityLevel","Severity":"","SourceLines":["\tVerbosity_level   string   `xml:\"verbosity_level,omitempty\"`   //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":4849,"Line":62,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use ALL_CAPS in Go names; use CamelCase instead","Severity":"","SourceLines":["\tVPN_ID          string   `xml:\"vpnid,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":5216,"Line":70,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Dev_mode should be DevMode","Severity":"","SourceLines":["\tDev_mode        string   `xml:\"dev_mode,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":5422,"Line":73,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Server_addr should be ServerAddr","Severity":"","SourceLines":["\tServer_addr     string   `xml:\"server_addr,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":5583,"Line":75,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Server_port should be ServerPort","Severity":"","SourceLines":["\tServer_port     string   `xml:\"server_port,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":5693,"Line":76,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Custom_options should be CustomOptions","Severity":"","SourceLines":["\tCustom_options  string   `xml:\"custom_options,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":5859,"Line":78,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Cert_ref should be CertRef","Severity":"","SourceLines":["\tCert_ref        string   `xml:\"certref,omitempty\"`        //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":5972,"Line":79,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field CA_ref should be CARef","Severity":"","SourceLines":["\tCA_ref          string   `xml:\"caref,omitempty\"`          //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":6085,"Line":80,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Verbosity_level should be VerbosityLevel","Severity":"","SourceLines":["\tVerbosity_level string   `xml:\"verbosity_level,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":6254,"Line":82,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Server_list should be ServerList","Severity":"","SourceLines":["\tServer_list       []string `xml:\"server_list,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":6622,"Line":90,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Random_local_port should be RandomLocalPort","Severity":"","SourceLines":["\tRandom_local_port BoolFlag `xml:\"random_local_port,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":6789,"Line":92,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Silent_install should be SilentInstall","Severity":"","SourceLines":["\tSilent_install    BoolFlag `xml:\"silent_install,omitempty\"`    //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":6907,"Line":93,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Use_token should be UseToken","Severity":"","SourceLines":["\tUse_token         BoolFlag `xml:\"use_token,omitempty\"`         //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":7025,"Line":94,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Common_name should be CommonName","Severity":"","SourceLines":["\tCommon_name      string   `xml:\"common_name,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":7287,"Line":100,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Tunnel_network should be TunnelNetwork","Severity":"","SourceLines":["\tTunnel_network   string   `xml:\"tunnel_network,omitempty\"`   //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":7449,"Line":102,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Tunnel_networkv6 should be TunnelNetworkv6","Severity":"","SourceLines":["\tTunnel_networkv6 string   `xml:\"tunnel_networkv6,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":7565,"Line":103,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Local_network should be LocalNetwork","Severity":"","SourceLines":["\tLocal_network    string   `xml:\"local_network,omitempty\"`    //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":7681,"Line":104,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Local_networkv6 should be LocalNetworkv6","Severity":"","SourceLines":["\tLocal_networkv6  string   `xml:\"local_networkv6,omitempty\"`  //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":7797,"Line":105,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Remote_network should be RemoteNetwork","Severity":"","SourceLines":["\tRemote_network   string   `xml:\"remote_network,omitempty\"`   //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":7913,"Line":106,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Remote_networkv6 should be RemoteNetworkv6","Severity":"","SourceLines":["\tRemote_networkv6 string   `xml:\"remote_networkv6,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":8029,"Line":107,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Push_reset should be PushReset","Severity":"","SourceLines":["\tPush_reset       BoolFlag `xml:\"push_reset,omitempty\"`     //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":8198,"Line":109,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Remove_route should be RemoveRoute","Severity":"","SourceLines":["\tRemove_route     BoolFlag `xml:\"remove_route,omitempty\"`   //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":8312,"Line":110,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field DNS_domain should be DNSDomain","Severity":"","SourceLines":["\tDNS_domain       string   `xml:\"dns_domain,omitempty\"`     //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":8426,"Line":111,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field DNS_server1 should be DNSServer1","Severity":"","SourceLines":["\tDNS_server1      string   `xml:\"dns_server1,omitempty\"`    //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":8540,"Line":112,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field DNS_server2 should be DNSServer2","Severity":"","SourceLines":["\tDNS_server2      string   `xml:\"dns_server2,omitempty\"`    //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":8654,"Line":113,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field DNS_server3 should be DNSServer3","Severity":"","SourceLines":["\tDNS_server3      string   `xml:\"dns_server3,omitempty\"`    //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":8768,"Line":114,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field DNS_server4 should be DNSServer4","Severity":"","SourceLines":["\tDNS_server4      string   `xml:\"dns_server4,omitempty\"`    //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":8882,"Line":115,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field NTP_server1 should be NTPServer1","Severity":"","SourceLines":["\tNTP_server1      string   `xml:\"ntp_server1,omitempty\"`    //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":8996,"Line":116,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field NTP_server2 should be NTPServer2","Severity":"","SourceLines":["\tNTP_server2      string   `xml:\"ntp_server2,omitempty\"`    //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":9110,"Line":117,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"ST1003: should not use underscores in Go names; struct field Custom_options should be CustomOptions","Severity":"","SourceLines":["\tCustom_options   string   `xml:\"custom_options,omitempty\"` //nolint:revive // XML field name requires underscore"],"Pos":{"Filename":"internal/model/vpn.go","Offset":9224,"Line":118,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.Error(t, err)"],"Pos":{"Filename":"internal/converter/markdown_test.go","Offset":1466,"Line":74,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/converter/markdown_test.go","Offset":1527,"Line":77,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.Error(t, err)"],"Pos":{"Filename":"internal/converter/markdown_test.go","Offset":5450,"Line":177,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/converter/markdown_test.go","Offset":5675,"Line":184,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/converter/markdown_test.go","Offset":6295,"Line":201,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/converter/markdown_test.go","Offset":7056,"Line":230,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/converter/markdown_test.go","Offset":7955,"Line":264,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/converter/markdown_test.go","Offset":8957,"Line":302,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/converter/markdown_test.go","Offset":9787,"Line":335,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/converter/markdown_test.go","Offset":10574,"Line":360,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\t\tassert.ErrorIs(t, err, tt.ErrType)"],"Pos":{"Filename":"internal/converter/test_helpers.go","Offset":1338,"Line":59,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"float-compare: use assert.InEpsilon (or InDelta)","Severity":"","SourceLines":["\tassert.Equal(t, 0.5, event.Percent)"],"Pos":{"Filename":"internal/display/display_test.go","Offset":3623,"Line":154,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\tassert.NoError(t, err1)"],"Pos":{"Filename":"internal/display/display_test.go","Offset":12641,"Line":500,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/export/file_test.go","Offset":2944,"Line":120,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/export/file_test.go","Offset":3012,"Line":122,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.ErrorAs(t, err, \u0026exportErr)"],"Pos":{"Filename":"internal/export/file_test.go","Offset":3828,"Line":149,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.ErrorAs(t, err, \u0026exportErr)"],"Pos":{"Filename":"internal/export/file_test.go","Offset":4219,"Line":162,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.ErrorAs(t, err, \u0026exportErr)"],"Pos":{"Filename":"internal/export/file_test.go","Offset":4641,"Line":175,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.ErrorAs(t, err, \u0026exportErr)"],"Pos":{"Filename":"internal/export/file_test.go","Offset":5074,"Line":188,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\tassert.Error(t, err)"],"Pos":{"Filename":"internal/export/file_test.go","Offset":5659,"Line":209,"Column":4},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.ErrorAs(t, err, \u0026exportErr)"],"Pos":{"Filename":"internal/export/file_test.go","Offset":6479,"Line":237,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.ErrorAs(t, err, \u0026exportErr)"],"Pos":{"Filename":"internal/export/file_test.go","Offset":6850,"Line":249,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.ErrorAs(t, err, \u0026exportErr)"],"Pos":{"Filename":"internal/export/file_test.go","Offset":7218,"Line":261,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.Error(t, err)"],"Pos":{"Filename":"internal/export/file_test.go","Offset":7551,"Line":274,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/export/file_test.go","Offset":8221,"Line":298,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/export/file_test.go","Offset":8323,"Line":302,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/export/file_test.go","Offset":8455,"Line":307,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\tassert.ErrorAs(t, err, \u0026exportErr)"],"Pos":{"Filename":"internal/export/file_test.go","Offset":9018,"Line":324,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\tassert.Error(t, unwrapped)"],"Pos":{"Filename":"internal/export/file_test.go","Offset":9108,"Line":328,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\tassert.NoError(t, err, \"Exported markdown should pass validation\")"],"Pos":{"Filename":"internal/export/file_test.go","Offset":13906,"Line":500,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\tassert.NoError(t, err, \"Exported JSON should pass validation\")"],"Pos":{"Filename":"internal/export/file_test.go","Offset":19322,"Line":675,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\tassert.NoError(t, err, \"Exported YAML should pass validation\")"],"Pos":{"Filename":"internal/export/file_test.go","Offset":24187,"Line":833,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.NoError(t, err, \"Markdown should pass strict goldmark validation\")"],"Pos":{"Filename":"internal/export/file_test.go","Offset":26531,"Line":897,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.NoError(t, err, \"JSON should pass strict encoding/json validation\")"],"Pos":{"Filename":"internal/export/file_test.go","Offset":27303,"Line":920,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.NoError(t, err, \"YAML should pass strict yaml.v3 validation\")"],"Pos":{"Filename":"internal/export/file_test.go","Offset":28260,"Line":947,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.NoError(t, err, \"Markdown should pass goldmark validation\")"],"Pos":{"Filename":"internal/export/file_test.go","Offset":30558,"Line":1032,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.NoError(t, err, \"Markdown should pass glamour validation\")"],"Pos":{"Filename":"internal/export/file_test.go","Offset":30795,"Line":1037,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.NoError(t, err, \"JSON should pass encoding/json validation\")"],"Pos":{"Filename":"internal/export/file_test.go","Offset":31406,"Line":1055,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.NoError(t, err, \"YAML should pass yaml.v3 validation\")"],"Pos":{"Filename":"internal/export/file_test.go","Offset":32607,"Line":1088,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.NoError(t, err, \"YAML should pass yaml.Node validation\")"],"Pos":{"Filename":"internal/export/file_test.go","Offset":33177,"Line":1102,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.NoError(t, err, \"Markdown should be valid\")"],"Pos":{"Filename":"internal/export/file_test.go","Offset":36846,"Line":1232,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.Error(t, err)"],"Pos":{"Filename":"internal/log/logger_test.go","Offset":3258,"Line":151,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\t\tassert.NoError(t, err, \"Output should be valid JSON\")"],"Pos":{"Filename":"internal/log/logger_test.go","Offset":3803,"Line":174,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.Error(t, err)"],"Pos":{"Filename":"internal/log/logger_test.go","Offset":8232,"Line":382,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/log/logger_test.go","Offset":8344,"Line":386,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/markdown/formatters_test.go","Offset":5187,"Line":225,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.Error(t, err)"],"Pos":{"Filename":"internal/markdown/generator_test.go","Offset":822,"Line":35,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.Error(t, err)"],"Pos":{"Filename":"internal/markdown/generator_test.go","Offset":1120,"Line":47,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/markdown/generator_test.go","Offset":1515,"Line":62,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/markdown/generator_test.go","Offset":1942,"Line":77,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/markdown/generator_test.go","Offset":2323,"Line":92,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/markdown/generator_test.go","Offset":2704,"Line":107,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.Error(t, err)"],"Pos":{"Filename":"internal/markdown/generator_test.go","Offset":2992,"Line":117,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.NoError(t, opts.Validate())"],"Pos":{"Filename":"internal/markdown/generator_test.go","Offset":3617,"Line":139,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.Error(t, opts.Validate())"],"Pos":{"Filename":"internal/markdown/generator_test.go","Offset":3709,"Line":143,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.NoError(t, err, \"Markdown generation should not fail\")"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":6042,"Line":222,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.NoError(t, err, \"JSON generation should not fail\")"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":8265,"Line":279,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.NoError(t, err, \"YAML generation should not fail\")"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":9173,"Line":304,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.Error(t, err, \"Should have failed to parse invalid XML\")"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":11536,"Line":389,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\tassert.NoError(t, err, \"Generation should not fail with valid config\")"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":12040,"Line":405,"Column":4},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":20315,"Line":641,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":20731,"Line":654,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":21101,"Line":667,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":21471,"Line":680,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":22057,"Line":704,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":22434,"Line":716,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.Error(t, err)"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":22838,"Line":732,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.Error(t, err)"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":23189,"Line":745,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\tassert.NoError(t, err, \"Template rendering should not fail\")"],"Pos":{"Filename":"internal/markdown/template_rendering_test.go","Offset":2374,"Line":118,"Column":4},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\tassert.NoError(t, err, \"Template rendering should not fail even with empty config\")"],"Pos":{"Filename":"internal/markdown/template_rendering_test.go","Offset":3781,"Line":167,"Column":4},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/model/opnsense_test.go","Offset":5758,"Line":227,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/model/opnsense_test.go","Offset":6272,"Line":251,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.ErrorIs(t, err1, \u0026ParseError{})"],"Pos":{"Filename":"internal/parser/errors_test.go","Offset":601,"Line":25,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.ErrorIs(t, err2, \u0026ParseError{})"],"Pos":{"Filename":"internal/parser/errors_test.go","Offset":642,"Line":26,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.ErrorIs(t, err1, \u0026ValidationError{})"],"Pos":{"Filename":"internal/parser/errors_test.go","Offset":1924,"Line":63,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.ErrorIs(t, err2, \u0026ValidationError{})"],"Pos":{"Filename":"internal/parser/errors_test.go","Offset":1970,"Line":64,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.ErrorIs(t, err1, \u0026AggregatedValidationError{})"],"Pos":{"Filename":"internal/parser/errors_test.go","Offset":8616,"Line":262,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.ErrorIs(t, err2, \u0026AggregatedValidationError{})"],"Pos":{"Filename":"internal/parser/errors_test.go","Offset":8672,"Line":263,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.ErrorIs(t, err1, sameErr)"],"Pos":{"Filename":"internal/parser/errors_test.go","Offset":8880,"Line":269,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.NotErrorIs(t, err1, err2)"],"Pos":{"Filename":"internal/parser/errors_test.go","Offset":8963,"Line":272,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.Error(t, err)"],"Pos":{"Filename":"internal/parser/xml_test.go","Offset":1204,"Line":58,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/parser/xml_test.go","Offset":1269,"Line":61,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\tassert.NoError(t, err)"],"Pos":{"Filename":"internal/parser/xml_test.go","Offset":11652,"Line":368,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\t\t\tassert.ErrorAs(t, err, \u0026aggErr, \"Should be AggregatedValidationError or contain one\")"],"Pos":{"Filename":"internal/parser/xml_test.go","Offset":16987,"Line":554,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"useless-assert: meaningless assertion","Severity":"","SourceLines":["\t\tassert.True(t, true, \"Documentation test should pass\")"],"Pos":{"Filename":"internal/processor/analyze_test.go","Offset":8682,"Line":311,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.Error(t, err)"],"Pos":{"Filename":"internal/processor/core_test.go","Offset":3674,"Line":129,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\t\tassert.Error(t, err)"],"Pos":{"Filename":"internal/processor/core_test.go","Offset":5187,"Line":183,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\tassert.Error(t, err)"],"Pos":{"Filename":"internal/processor/processor_test.go","Offset":671,"Line":33,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testifylint","Text":"require-error: for error assertions use require","Severity":"","SourceLines":["\tassert.Error(t, err)"],"Pos":{"Filename":"internal/processor/processor_test.go","Offset":3830,"Line":132,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `cmd_test` instead of `cmd`","Severity":"","SourceLines":["package cmd"],"Pos":{"Filename":"cmd/convert_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `cmd_test` instead of `cmd`","Severity":"","SourceLines":["package cmd"],"Pos":{"Filename":"cmd/root_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `audit_test` instead of `audit`","Severity":"","SourceLines":["package audit"],"Pos":{"Filename":"internal/audit/mode_controller_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `config_test` instead of `config`","Severity":"","SourceLines":["package config"],"Pos":{"Filename":"internal/config/config_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `converter_test` instead of `converter`","Severity":"","SourceLines":["package converter"],"Pos":{"Filename":"internal/converter/benchmark_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `converter_test` instead of `converter`","Severity":"","SourceLines":["package converter"],"Pos":{"Filename":"internal/converter/json_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `converter_test` instead of `converter`","Severity":"","SourceLines":["package converter"],"Pos":{"Filename":"internal/converter/markdown_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `converter_test` instead of `converter`","Severity":"","SourceLines":["package converter"],"Pos":{"Filename":"internal/converter/yaml_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `display_test` instead of `display`","Severity":"","SourceLines":["package display"],"Pos":{"Filename":"internal/display/display_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `export_test` instead of `export`","Severity":"","SourceLines":["package export"],"Pos":{"Filename":"internal/export/file_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `log_test` instead of `log`","Severity":"","SourceLines":["package log"],"Pos":{"Filename":"internal/log/logger_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `markdown_test` instead of `markdown`","Severity":"","SourceLines":["package markdown"],"Pos":{"Filename":"internal/markdown/formatters_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `markdown_test` instead of `markdown`","Severity":"","SourceLines":["package markdown"],"Pos":{"Filename":"internal/markdown/generator_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `markdown_test` instead of `markdown`","Severity":"","SourceLines":["package markdown"],"Pos":{"Filename":"internal/markdown/integration_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `markdown_test` instead of `markdown`","Severity":"","SourceLines":["package markdown"],"Pos":{"Filename":"internal/markdown/template_override_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `markdown_test` instead of `markdown`","Severity":"","SourceLines":["package markdown"],"Pos":{"Filename":"internal/markdown/template_rendering_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `model_test` instead of `model`","Severity":"","SourceLines":["package model"],"Pos":{"Filename":"internal/model/enrichment_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `model_test` instead of `model`","Severity":"","SourceLines":["package model"],"Pos":{"Filename":"internal/model/opnsense_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `parser_test` instead of `parser`","Severity":"","SourceLines":["package parser"],"Pos":{"Filename":"internal/parser/benchmark_test.go","Offset":138,"Line":5,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `parser_test` instead of `parser`","Severity":"","SourceLines":["package parser"],"Pos":{"Filename":"internal/parser/errors_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `parser_test` instead of `parser`","Severity":"","SourceLines":["package parser"],"Pos":{"Filename":"internal/parser/validation_sample_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `parser_test` instead of `parser`","Severity":"","SourceLines":["package parser"],"Pos":{"Filename":"internal/parser/validator_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `parser_test` instead of `parser`","Severity":"","SourceLines":["package parser"],"Pos":{"Filename":"internal/parser/xml_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `stig_test` instead of `stig`","Severity":"","SourceLines":["package stig"],"Pos":{"Filename":"internal/plugins/stig/stig_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `processor_test` instead of `processor`","Severity":"","SourceLines":["package processor"],"Pos":{"Filename":"internal/processor/analyze_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `processor_test` instead of `processor`","Severity":"","SourceLines":["package processor"],"Pos":{"Filename":"internal/processor/core_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `processor_test` instead of `processor`","Severity":"","SourceLines":["package processor"],"Pos":{"Filename":"internal/processor/processor_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `validator_test` instead of `validator`","Severity":"","SourceLines":["package validator"],"Pos":{"Filename":"internal/validator/opnsense_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `validator_test` instead of `validator`","Severity":"","SourceLines":["package validator"],"Pos":{"Filename":"internal/validator/validation_comprehensive_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"testpackage","Text":"package should be `internal_test` instead of `internal`","Severity":"","SourceLines":["package internal"],"Pos":{"Filename":"internal/walker_test.go","Offset":8,"Line":1,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""}],"Report":{"Linters":[{"Name":"arangolint"},{"Name":"asasalint","Enabled":true},{"Name":"asciicheck","Enabled":true},{"Name":"bidichk","Enabled":true},{"Name":"bodyclose","Enabled":true},{"Name":"canonicalheader","Enabled":true},{"Name":"containedctx","Enabled":true},{"Name":"contextcheck","Enabled":true},{"Name":"copyloopvar","Enabled":true},{"Name":"cyclop","Enabled":true},{"Name":"decorder","Enabled":true},{"Name":"depguard"},{"Name":"dogsled"},{"Name":"dupl","Enabled":true},{"Name":"dupword"},{"Name":"durationcheck","Enabled":true},{"Name":"embeddedstructfieldcheck","Enabled":true},{"Name":"errcheck","Enabled":true},{"Name":"errchkjson","Enabled":true},{"Name":"errname","Enabled":true},{"Name":"errorlint","Enabled":true},{"Name":"exhaustive"},{"Name":"exhaustruct"},{"Name":"exptostd","Enabled":true},{"Name":"forbidigo"},{"Name":"forcetypeassert"},{"Name":"funcorder","Enabled":true},{"Name":"fatcontext","Enabled":true},{"Name":"funlen","Enabled":true},{"Name":"gci","Enabled":true},{"Name":"ginkgolinter","Enabled":true},{"Name":"gocheckcompilerdirectives","Enabled":true},{"Name":"gochecknoglobals","Enabled":true},{"Name":"gochecknoinits","Enabled":true},{"Name":"gochecksumtype","Enabled":true},{"Name":"gocognit","Enabled":true},{"Name":"goconst","Enabled":true},{"Name":"gocritic","Enabled":true},{"Name":"gocyclo","Enabled":true},{"Name":"godot","Enabled":true},{"Name":"godox"},{"Name":"err113"},{"Name":"gofmt"},{"Name":"gofumpt","Enabled":true},{"Name":"golines","Enabled":true},{"Name":"goheader"},{"Name":"goimports","Enabled":true},{"Name":"mnd","Enabled":true},{"Name":"gomoddirectives","Enabled":true},{"Name":"gomodguard"},{"Name":"goprintffuncname","Enabled":true},{"Name":"gosec","Enabled":true},{"Name":"gosmopolitan"},{"Name":"govet","Enabled":true},{"Name":"grouper"},{"Name":"iface","Enabled":true},{"Name":"importas"},{"Name":"inamedparam","Enabled":true},{"Name":"ineffassign","Enabled":true},{"Name":"interfacebloat"},{"Name":"intrange","Enabled":true},{"Name":"ireturn"},{"Name":"lll"},{"Name":"loggercheck","Enabled":true},{"Name":"maintidx"},{"Name":"makezero","Enabled":true},{"Name":"mirror","Enabled":true},{"Name":"misspell"},{"Name":"musttag","Enabled":true},{"Name":"nakedret","Enabled":true},{"Name":"nestif","Enabled":true},{"Name":"nilerr","Enabled":true},{"Name":"nilnesserr","Enabled":true},{"Name":"nilnil","Enabled":true},{"Name":"nlreturn"},{"Name":"noctx","Enabled":true},{"Name":"noinlineerr"},{"Name":"nonamedreturns","Enabled":true},{"Name":"nosprintfhostport","Enabled":true},{"Name":"paralleltest"},{"Name":"perfsprint","Enabled":true},{"Name":"prealloc"},{"Name":"predeclared","Enabled":true},{"Name":"promlinter","Enabled":true},{"Name":"protogetter","Enabled":true},{"Name":"reassign","Enabled":true},{"Name":"recvcheck","Enabled":true},{"Name":"revive","Enabled":true},{"Name":"rowserrcheck","Enabled":true},{"Name":"sloglint","Enabled":true},{"Name":"sqlclosecheck","Enabled":true},{"Name":"spancheck","Enabled":true},{"Name":"staticcheck","Enabled":true},{"Name":"swaggo"},{"Name":"tagalign"},{"Name":"tagliatelle"},{"Name":"testableexamples","Enabled":true},{"Name":"testifylint","Enabled":true},{"Name":"testpackage","Enabled":true},{"Name":"thelper","Enabled":true},{"Name":"tparallel","Enabled":true},{"Name":"typecheck","Enabled":true},{"Name":"unconvert","Enabled":true},{"Name":"unparam","Enabled":true},{"Name":"unused","Enabled":true},{"Name":"usestdlibvars","Enabled":true},{"Name":"usetesting","Enabled":true},{"Name":"varnamelen"},{"Name":"wastedassign","Enabled":true},{"Name":"whitespace","Enabled":true},{"Name":"wrapcheck"},{"Name":"wsl"},{"Name":"wsl_v5"},{"Name":"zerologlint"},{"Name":"nolintlint","Enabled":true}]}}
