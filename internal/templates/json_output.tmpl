{
  "version": "{{ .Version }}",
  "generated_at": "{{ .GeneratedAt }}",
  "system": {
    "hostname": "{{ .System.Hostname }}",
    "domain": "{{ .System.Domain }}",
    "timezone": "{{ .System.Timezone }}",
    "optimization": "{{ .System.Optimization }}",
    "language": "{{ .System.Language }}",
    "dns_allow_override": "{{ .System.DNSAllowOverride }}",
    "next_uid": "{{ .System.NextUID }}",
    "next_gid": "{{ .System.NextGID }}",
    "time_servers": "{{ .System.TimeServers }}",
    "dns_server": "{{ .System.DNSServer }}",
    "disable_nat_reflection": "{{ .System.DisableNATReflection }}",
    "use_virtual_terminal": "{{ .System.UseVirtualTerminal }}",
    "disable_console_menu": {{ if .System.DisableConsoleMenu }}true{{ else }}false{{ end }},
    "disable_vlan_hw_filter": "{{ .System.DisableVLANHWFilter }}",
    "disable_checksum_offloading": "{{ .System.DisableChecksumOffloading }}",
    "disable_segmentation_offloading": "{{ .System.DisableSegmentationOffloading }}",
    "disable_large_receive_offloading": "{{ .System.DisableLargeReceiveOffloading }}",
    "ipv6_allow": {{ if .System.IPv6Allow }}true{{ else }}false{{ end }},
    "powerd_ac_mode": "{{ .System.PowerdACMode }}",
    "powerd_battery_mode": "{{ .System.PowerdBatteryMode }}",
    "powerd_normal_mode": "{{ .System.PowerdNormalMode }}",
    "pf_share_forward": "{{ .System.PfShareForward }}",
    "lb_use_sticky": "{{ .System.LbUseSticky }}",
    "rrd_backup": "{{ .System.RrdBackup }}",
    "netflow_backup": "{{ .System.NetflowBackup }}",
    "bogons": {
      "interval": "{{ .System.Bogons.Interval }}"
    },
    "webgui": {
      "protocol": "{{ .System.WebGUI.Protocol }}"
    },
    "ssh": {
      "group": "{{ .System.SSH.Group }}"
    },
    "firmware": {
      "version": "{{ .System.Firmware.Version }}",
      "mirror": "{{ .System.Firmware.Mirror }}",
      "flavour": "{{ .System.Firmware.Flavour }}",
      "plugins": "{{ .System.Firmware.Plugins }}"
    },
    "users": [
      {{- $first := true }}
      {{- range .System.User }}
      {{- if not $first }},{{ end }}
      {
        "name": "{{ .Name }}",
        "uid": "{{ .UID }}",
        "groupname": "{{ .Groupname }}",
        "description": "{{ .Descr }}",
        "scope": "{{ .Scope }}",
        "has_api_keys": {{ if .APIKeys }}true{{ else }}false{{ end }},
        "has_ssh_keys": {{ if .AuthorizedKeys }}true{{ else }}false{{ end }},
        "has_ipsec_psk": {{ if .IPSecPSK }}true{{ else }}false{{ end }},
        "has_otp_seed": {{ if .OTPSeed }}true{{ else }}false{{ end }}
      }
      {{- $first = false }}
      {{- end }}
    ],
    "groups": [
      {{- $first := true }}
      {{- range .System.Group }}
      {{- if not $first }},{{ end }}
      {
        "name": "{{ .Name }}",
        "gid": "{{ .Gid }}",
        "description": "{{ .Description }}",
        "scope": "{{ .Scope }}",
        "member": "{{ .Member }}",
        "privileges": "{{ .Priv }}"
      }
      {{- $first = false }}
      {{- end }}
    ]
  },
  "sysctl": [
    {{- $first := true }}
    {{- range .Sysctl }}
    {{- if not $first }},{{ end }}
    {
      "tunable": "{{ .Tunable }}",
      "value": "{{ .Value }}"
    }
    {{- $first = false }}
    {{- end }}
  ],
  "interfaces": {
    {{- $first := true }}
    {{- range $key, $interface := .Interfaces.Items }}
    {{- if not $first }},{{ end }}
    "{{ $key }}": {
      "enabled": {{ if $interface.Enable }}true{{ else }}false{{ end }},
      "description": "{{ $interface.Descr }}",
      "physical_interface": "{{ $interface.If }}",
      "ipv4_address": "{{ $interface.IPAddr }}",
      "ipv4_subnet": "{{ $interface.Subnet }}",
      "ipv6_address": "{{ $interface.IPAddrv6 }}",
      "ipv6_subnet": "{{ $interface.Subnetv6 }}",
      "gateway": "{{ $interface.Gateway }}",
      "gatewayv6": "{{ $interface.Gatewayv6 }}",
      "type": "{{ $interface.Type }}",
      "virtual": {{ if $interface.Virtual }}true{{ else }}false{{ end }},
      "locked": {{ if $interface.Lock }}true{{ else }}false{{ end }},
      "spoof_mac": "{{ $interface.Spoofmac }}",
      "internal_dynamic": {{ if $interface.InternalDynamic }}true{{ else }}false{{ end }},
      "mtu": "{{ $interface.MTU }}",
      "media": "{{ $interface.Media }}",
      "media_options": "{{ $interface.MediaOpt }}",
      "dhcp_hostname": "{{ $interface.DHCPHostname }}",
      "block_private": {{ if $interface.BlockPriv }}true{{ else }}false{{ end }},
      "block_bogons": {{ if $interface.BlockBogons }}true{{ else }}false{{ end }},
      "dhcp6_ia_pd_len": "{{ $interface.DHCP6IaPdLen }}",
      "track6_interface": "{{ $interface.Track6Interface }}",
      "track6_prefix_id": "{{ $interface.Track6PrefixID }}"
    }
    {{- $first = false }}
    {{- end }}
  },
  "firewall_rules": [
    {{- $first := true }}
    {{- range $index, $rule := .Filter.Rule }}
    {{- if not $first }},{{ end }}
    {
      "number": {{ add $index 1 }},
      "action": "{{ $rule.Type }}",
      "protocol": "{{ $rule.IPProtocol }}",
      "interface": "{{ $rule.Interface }}",
      "direction": "{{ $rule.Direction }}",
      "state_type": "{{ $rule.StateType }}",
      "quick": {{ if $rule.Quick }}true{{ else }}false{{ end }},
      "source": {
        "network": "{{ $rule.Source.Network }}",
        "any": {{ if $rule.Source.Any }}true{{ else }}false{{ end }}
      },
      "destination": {
        "network": "{{ $rule.Destination.Network }}",
        "any": {{ if $rule.Destination.Any }}true{{ else }}false{{ end }},
        "port": "{{ $rule.Destination.Port }}"
      },
      "description": "{{ $rule.Descr }}"
    }
    {{- $first = false }}
    {{- end }}
  ],
  "nat": {
    "outbound": {
      "mode": "{{ .Nat.Outbound.Mode }}"
    }
  },
  "gateways": [
    {{- $first := true }}
    {{- range .Gateways.Gateway }}
    {{- if not $first }},{{ end }}
    {
      "name": "{{ .Name }}",
      "description": "{{ .Descr }}",
      "interface": "{{ .Interface }}",
      "gateway": "{{ .Gateway }}",
      "protocol": "{{ .IPProtocol }}",
      "default": {{ if .DefaultGW }}true{{ else }}false{{ end }},
      "monitor_disable": {{ if .MonitorDisable }}true{{ else }}false{{ end }},
      "interval": "{{ .Interval }}",
      "weight": "{{ .Weight }}",
      "far_gateway": {{ if .FarGW }}true{{ else }}false{{ end }}
    }
    {{- $first = false }}
    {{- end }}
  ],
  "services": {
    "dhcp": {
      {{- $first := true }}
      {{- range $key, $dhcp := .Dhcpd.Items }}
      {{- if not $first }},{{ end }}
      "{{ $key }}": {
        "enabled": {{ if $dhcp.Enable }}true{{ else }}false{{ end }},
        "gateway": "{{ $dhcp.Gateway }}",
        "range": {
          "from": "{{ $dhcp.Range.From }}",
          "to": "{{ $dhcp.Range.To }}"
        },
        "dns_server": "{{ $dhcp.Dnsserver }}",
        "wins_server": "{{ $dhcp.Winsserver }}",
        "ntp_server": "{{ $dhcp.Ntpserver }}",
        "ddns_algorithm": "{{ $dhcp.DdnsDomainAlgorithm }}"
      }
      {{- $first = false }}
      {{- end }}
    },
    "dns_resolver": {
      "enabled": "{{ .Unbound.Enable }}",
      "dnssec": "{{ .Unbound.Dnssec }}",
      "dnssec_stripped": "{{ .Unbound.Dnssecstripped }}"
    },
    "snmp": {
      "system_location": "{{ .Snmpd.SysLocation }}",
      "system_contact": "{{ .Snmpd.SysContact }}",
      "ro_community": "{{ .Snmpd.ROCommunity }}"
    },
    "ntp": {
      "preferred_server": "{{ .Ntpd.Prefer }}"
    }
  },
  "wireguard": {
    "enabled": {{ if and .OPNsense.Wireguard .OPNsense.Wireguard.General }}{{ if .OPNsense.Wireguard.General.Enabled }}true{{ else }}false{{ end }}{{ else }}false{{ end }},
    "version": {{ if and .OPNsense.Wireguard .OPNsense.Wireguard.General }}{{ .OPNsense.Wireguard.General.Version }}{{ else }}null{{ end }},
    "servers": [
      {{- if and .OPNsense.Wireguard .OPNsense.Wireguard.Server .OPNsense.Wireguard.Server.Servers .OPNsense.Wireguard.Server.Servers.Server }}
      {{- $first := true }}
      {{- range .OPNsense.Wireguard.Server.Servers.Server }}
      {{- if not $first }},{{ end }}
      {
        "name": "{{ .Name }}",
        "uuid": "{{ .UUID }}",
        "enabled": {{ if .Enabled }}true{{ else }}false{{ end }},
        "instance": "{{ .Instance }}",
        "port": "{{ .Port }}",
        "mtu": "{{ .MTU }}",
        "dns": "{{ .DNS }}",
        "tunnel_address": "{{ .Tunneladdress }}",
        "disable_routes": {{ if .Disableroutes }}true{{ else }}false{{ end }},
        "gateway": "{{ .Gateway }}",
        "peers": "{{ .Peers }}",
        "public_key": "{{ .Pubkey }}"
      }
      {{- $first = false }}
      {{- end }}
      {{- end }}
    ],
    "clients": [
      {{- if and .OPNsense.Wireguard .OPNsense.Wireguard.Client .OPNsense.Wireguard.Client.Clients .OPNsense.Wireguard.Client.Clients.Client }}
      {{- $first := true }}
      {{- range .OPNsense.Wireguard.Client.Clients.Client }}
      {{- if not $first }},{{ end }}
      {
        "name": "{{ .Name }}",
        "uuid": "{{ .UUID }}",
        "enabled": {{ if .Enabled }}true{{ else }}false{{ end }},
        "tunnel_address": "{{ .Tunneladdress }}",
        "server_address": "{{ .Serveraddress }}",
        "server_port": "{{ .Serverport }}",
        "keepalive": "{{ .Keepalive }}",
        "public_key": "{{ .Pubkey }}"
      }
      {{- $first = false }}
      {{- end }}
      {{- end }}
    ]
  },
  "revision": {{ if .Revision }}{
    "username": "{{ .Revision.Username }}",
    "time": "{{ .Revision.Time }}",
    "description": "{{ .Revision.Description }}"
  }{{ else }}null{{ end }},
  "statistics": {
    "total_interfaces": {{ len .Interfaces.Items }},
    "total_firewall_rules": {{ len .Filter.Rule }},
    "total_users": {{ len .System.User }},
    "total_groups": {{ len .System.Group }},
    "total_sysctl_tunables": {{ len .Sysctl }},
    "total_dhcp_scopes": {{ len .Dhcpd.Items }},
    "total_gateways": {{ len .Gateways.Gateway }},
    "wireguard_servers": {{ if and .OPNsense.Wireguard .OPNsense.Wireguard.Server .OPNsense.Wireguard.Server.Servers .OPNsense.Wireguard.Server.Servers.Server }}{{ len .OPNsense.Wireguard.Server.Servers.Server }}{{ else }}0{{ end }},
    "wireguard_clients": {{ if and .OPNsense.Wireguard .OPNsense.Wireguard.Client .OPNsense.Wireguard.Client.Clients .OPNsense.Wireguard.Client.Clients.Client }}{{ len .OPNsense.Wireguard.Client.Clients.Client }}{{ else }}0{{ end }}
  },
  "security_assessment": {
    "web_gui_protocol": {{ if eq .System.WebGUI.Protocol "https" }}"secure"{{ else }}"insecure"{{ end }},
    "snmp_community": {{ if eq .Snmpd.ROCommunity "public" }}"default"{{ else }}"custom"{{ end }},
    "ssh_access": {{ if .System.SSH.Group }}"configured"{{ else }}"not_configured"{{ end }},
    "hardware_offloading": {{ if or .System.DisableChecksumOffloading .System.DisableSegmentationOffloading .System.DisableLargeReceiveOffloading }}"disabled"{{ else }}"enabled"{{ end }}
  }
}
