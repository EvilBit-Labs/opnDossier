// Code generated by zek; DO NOT EDIT.

package cmd

import "encoding/xml"

type Opnsense struct {
	XMLName              xml.Name `xml:"opnsense" json:"opnsense,omitempty"`
	TriggerInitialWizard struct {
	} `xml:"trigger_initial_wizard" json:"trigger_initial_wizard,omitempty"`
	Theme struct {
		Text string `xml:",chardata" json:"text,omitempty"` // opnsense
	} `xml:"theme" json:"theme,omitempty"`
	Sysctl struct {
		Item []struct {
			Descr struct {
				Text string `xml:",chardata" json:"text,omitempty"` // Increase UFS read-ahead s...
			} `xml:"descr" json:"descr,omitempty"`
			Tunable struct {
				Text string `xml:",chardata" json:"text,omitempty"` // vfs.read_max, net.inet.ip...
			} `xml:"tunable" json:"tunable,omitempty"`
			Value struct {
				Text string `xml:",chardata" json:"text,omitempty"` // default
			} `xml:"value" json:"value,omitempty"`
		} `xml:"item" json:"item,omitempty"`
	} `xml:"sysctl" json:"sysctl,omitempty"`
	System struct {
		Optimization struct {
			Text string `xml:",chardata" json:"text,omitempty"` // normal
		} `xml:"optimization" json:"optimization,omitempty"`
		Hostname struct {
			Text string `xml:",chardata" json:"text,omitempty"` // OPNsense
		} `xml:"hostname" json:"hostname,omitempty"`
		Domain struct {
			Text string `xml:",chardata" json:"text,omitempty"` // localdomain
		} `xml:"domain" json:"domain,omitempty"`
		Dnsallowoverride struct {
			Text string `xml:",chardata" json:"text,omitempty"` // 1
		} `xml:"dnsallowoverride" json:"dnsallowoverride,omitempty"`
		Group struct {
			Name struct {
				Text string `xml:",chardata" json:"text,omitempty"` // admins
			} `xml:"name" json:"name,omitempty"`
			Description struct {
				Text string `xml:",chardata" json:"text,omitempty"` // System Administrators
			} `xml:"description" json:"description,omitempty"`
			Scope struct {
				Text string `xml:",chardata" json:"text,omitempty"` // system
			} `xml:"scope" json:"scope,omitempty"`
			Gid struct {
				Text string `xml:",chardata" json:"text,omitempty"` // 1999
			} `xml:"gid" json:"gid,omitempty"`
			Member struct {
				Text string `xml:",chardata" json:"text,omitempty"` // 0
			} `xml:"member" json:"member,omitempty"`
			Priv struct {
				Text string `xml:",chardata" json:"text,omitempty"` // page-all
			} `xml:"priv" json:"priv,omitempty"`
		} `xml:"group" json:"group,omitempty"`
		User struct {
			Name struct {
				Text string `xml:",chardata" json:"text,omitempty"` // root
			} `xml:"name" json:"name,omitempty"`
			Descr struct {
				Text string `xml:",chardata" json:"text,omitempty"` // System Administrator
			} `xml:"descr" json:"descr,omitempty"`
			Scope struct {
				Text string `xml:",chardata" json:"text,omitempty"` // system
			} `xml:"scope" json:"scope,omitempty"`
			Groupname struct {
				Text string `xml:",chardata" json:"text,omitempty"` // admins
			} `xml:"groupname" json:"groupname,omitempty"`
			Password struct {
				Text string `xml:",chardata" json:"text,omitempty"` // $2y$10$YRVoF4SgskIsrXOvOQ...
			} `xml:"password" json:"password,omitempty"`
			Uid struct {
				Text string `xml:",chardata" json:"text,omitempty"` // 0
			} `xml:"uid" json:"uid,omitempty"`
		} `xml:"user" json:"user,omitempty"`
		Nextuid struct {
			Text string `xml:",chardata" json:"text,omitempty"` // 2000
		} `xml:"nextuid" json:"nextuid,omitempty"`
		Nextgid struct {
			Text string `xml:",chardata" json:"text,omitempty"` // 2000
		} `xml:"nextgid" json:"nextgid,omitempty"`
		Timezone struct {
			Text string `xml:",chardata" json:"text,omitempty"` // Etc/UTC
		} `xml:"timezone" json:"timezone,omitempty"`
		Timeservers struct {
			Text string `xml:",chardata" json:"text,omitempty"` // 0.opnsense.pool.ntp.org 1...
		} `xml:"timeservers" json:"timeservers,omitempty"`
		Webgui struct {
			Protocol struct {
				Text string `xml:",chardata" json:"text,omitempty"` // https
			} `xml:"protocol" json:"protocol,omitempty"`
		} `xml:"webgui" json:"webgui,omitempty"`
		Disablenatreflection struct {
			Text string `xml:",chardata" json:"text,omitempty"` // yes
		} `xml:"disablenatreflection" json:"disablenatreflection,omitempty"`
		Usevirtualterminal struct {
			Text string `xml:",chardata" json:"text,omitempty"` // 1
		} `xml:"usevirtualterminal" json:"usevirtualterminal,omitempty"`
		Disableconsolemenu struct {
		} `xml:"disableconsolemenu" json:"disableconsolemenu,omitempty"`
		Disablevlanhwfilter struct {
			Text string `xml:",chardata" json:"text,omitempty"` // 1
		} `xml:"disablevlanhwfilter" json:"disablevlanhwfilter,omitempty"`
		Disablechecksumoffloading struct {
			Text string `xml:",chardata" json:"text,omitempty"` // 1
		} `xml:"disablechecksumoffloading" json:"disablechecksumoffloading,omitempty"`
		Disablesegmentationoffloading struct {
			Text string `xml:",chardata" json:"text,omitempty"` // 1
		} `xml:"disablesegmentationoffloading" json:"disablesegmentationoffloading,omitempty"`
		Disablelargereceiveoffloading struct {
			Text string `xml:",chardata" json:"text,omitempty"` // 1
		} `xml:"disablelargereceiveoffloading" json:"disablelargereceiveoffloading,omitempty"`
		Ipv6allow struct {
		} `xml:"ipv6allow" json:"ipv6allow,omitempty"`
		PowerdAcMode struct {
			Text string `xml:",chardata" json:"text,omitempty"` // hadp
		} `xml:"powerd_ac_mode" json:"powerd_ac_mode,omitempty"`
		PowerdBatteryMode struct {
			Text string `xml:",chardata" json:"text,omitempty"` // hadp
		} `xml:"powerd_battery_mode" json:"powerd_battery_mode,omitempty"`
		PowerdNormalMode struct {
			Text string `xml:",chardata" json:"text,omitempty"` // hadp
		} `xml:"powerd_normal_mode" json:"powerd_normal_mode,omitempty"`
		Bogons struct {
			Interval struct {
				Text string `xml:",chardata" json:"text,omitempty"` // monthly
			} `xml:"interval" json:"interval,omitempty"`
		} `xml:"bogons" json:"bogons,omitempty"`
		PfShareForward struct {
			Text string `xml:",chardata" json:"text,omitempty"` // 1
		} `xml:"pf_share_forward" json:"pf_share_forward,omitempty"`
		LbUseSticky struct {
			Text string `xml:",chardata" json:"text,omitempty"` // 1
		} `xml:"lb_use_sticky" json:"lb_use_sticky,omitempty"`
		Ssh struct {
			Group struct {
				Text string `xml:",chardata" json:"text,omitempty"` // admins
			} `xml:"group" json:"group,omitempty"`
		} `xml:"ssh" json:"ssh,omitempty"`
		Rrdbackup struct {
			Text string `xml:",chardata" json:"text,omitempty"` // -1
		} `xml:"rrdbackup" json:"rrdbackup,omitempty"`
		Netflowbackup struct {
			Text string `xml:",chardata" json:"text,omitempty"` // -1
		} `xml:"netflowbackup" json:"netflowbackup,omitempty"`
	} `xml:"system" json:"system,omitempty"`
	Interfaces struct {
		Wan struct {
			Enable struct {
				Text string `xml:",chardata" json:"text,omitempty"` // 1
			} `xml:"enable" json:"enable,omitempty"`
			If struct {
				Text string `xml:",chardata" json:"text,omitempty"` // mismatch1
			} `xml:"if" json:"if,omitempty"`
			Mtu struct {
			} `xml:"mtu" json:"mtu,omitempty"`
			Ipaddr struct {
				Text string `xml:",chardata" json:"text,omitempty"` // dhcp
			} `xml:"ipaddr" json:"ipaddr,omitempty"`
			Ipaddrv6 struct {
				Text string `xml:",chardata" json:"text,omitempty"` // dhcp6
			} `xml:"ipaddrv6" json:"ipaddrv6,omitempty"`
			Subnet struct {
			} `xml:"subnet" json:"subnet,omitempty"`
			Gateway struct {
			} `xml:"gateway" json:"gateway,omitempty"`
			Blockpriv struct {
				Text string `xml:",chardata" json:"text,omitempty"` // 1
			} `xml:"blockpriv" json:"blockpriv,omitempty"`
			Blockbogons struct {
				Text string `xml:",chardata" json:"text,omitempty"` // 1
			} `xml:"blockbogons" json:"blockbogons,omitempty"`
			Dhcphostname struct {
			} `xml:"dhcphostname" json:"dhcphostname,omitempty"`
			Media struct {
			} `xml:"media" json:"media,omitempty"`
			Mediaopt struct {
			} `xml:"mediaopt" json:"mediaopt,omitempty"`
			Dhcp6IaPdLen struct {
				Text string `xml:",chardata" json:"text,omitempty"` // 0
			} `xml:"dhcp6-ia-pd-len" json:"dhcp6-ia-pd-len,omitempty"`
		} `xml:"wan" json:"wan,omitempty"`
		Lan struct {
			Enable struct {
				Text string `xml:",chardata" json:"text,omitempty"` // 1
			} `xml:"enable" json:"enable,omitempty"`
			If struct {
				Text string `xml:",chardata" json:"text,omitempty"` // mismatch0
			} `xml:"if" json:"if,omitempty"`
			Ipaddr struct {
				Text string `xml:",chardata" json:"text,omitempty"` // 192.168.1.1
			} `xml:"ipaddr" json:"ipaddr,omitempty"`
			Subnet struct {
				Text string `xml:",chardata" json:"text,omitempty"` // 24
			} `xml:"subnet" json:"subnet,omitempty"`
			Ipaddrv6 struct {
				Text string `xml:",chardata" json:"text,omitempty"` // track6
			} `xml:"ipaddrv6" json:"ipaddrv6,omitempty"`
			Subnetv6 struct {
				Text string `xml:",chardata" json:"text,omitempty"` // 64
			} `xml:"subnetv6" json:"subnetv6,omitempty"`
			Media struct {
			} `xml:"media" json:"media,omitempty"`
			Mediaopt struct {
			} `xml:"mediaopt" json:"mediaopt,omitempty"`
			Track6Interface struct {
				Text string `xml:",chardata" json:"text,omitempty"` // wan
			} `xml:"track6-interface" json:"track6-interface,omitempty"`
			Track6PrefixID struct {
				Text string `xml:",chardata" json:"text,omitempty"` // 0
			} `xml:"track6-prefix-id" json:"track6-prefix-id,omitempty"`
		} `xml:"lan" json:"lan,omitempty"`
	} `xml:"interfaces" json:"interfaces,omitempty"`
	Dhcpd struct {
		Lan struct {
			Enable struct {
			} `xml:"enable" json:"enable,omitempty"`
			Range struct {
				From struct {
					Text string `xml:",chardata" json:"text,omitempty"` // 192.168.1.100
				} `xml:"from" json:"from,omitempty"`
				To struct {
					Text string `xml:",chardata" json:"text,omitempty"` // 192.168.1.199
				} `xml:"to" json:"to,omitempty"`
			} `xml:"range" json:"range,omitempty"`
		} `xml:"lan" json:"lan,omitempty"`
	} `xml:"dhcpd" json:"dhcpd,omitempty"`
	Unbound struct {
		Enable struct {
			Text string `xml:",chardata" json:"text,omitempty"` // 1
		} `xml:"enable" json:"enable,omitempty"`
	} `xml:"unbound" json:"unbound,omitempty"`
	Snmpd struct {
		Syslocation struct {
		} `xml:"syslocation" json:"syslocation,omitempty"`
		Syscontact struct {
		} `xml:"syscontact" json:"syscontact,omitempty"`
		Rocommunity struct {
			Text string `xml:",chardata" json:"text,omitempty"` // public
		} `xml:"rocommunity" json:"rocommunity,omitempty"`
	} `xml:"snmpd" json:"snmpd,omitempty"`
	Nat struct {
		Outbound struct {
			Mode struct {
				Text string `xml:",chardata" json:"text,omitempty"` // automatic
			} `xml:"mode" json:"mode,omitempty"`
		} `xml:"outbound" json:"outbound,omitempty"`
	} `xml:"nat" json:"nat,omitempty"`
	Filter struct {
		Rule []struct {
			Type struct {
				Text string `xml:",chardata" json:"text,omitempty"` // pass
			} `xml:"type" json:"type,omitempty"`
			Ipprotocol struct {
				Text string `xml:",chardata" json:"text,omitempty"` // inet, inet6
			} `xml:"ipprotocol" json:"ipprotocol,omitempty"`
			Descr struct {
				Text string `xml:",chardata" json:"text,omitempty"` // Default allow LAN to any ...
			} `xml:"descr" json:"descr,omitempty"`
			Interface struct {
				Text string `xml:",chardata" json:"text,omitempty"` // lan
			} `xml:"interface" json:"interface,omitempty"`
			Source struct {
				Network struct {
					Text string `xml:",chardata" json:"text,omitempty"` // lan
				} `xml:"network" json:"network,omitempty"`
			} `xml:"source" json:"source,omitempty"`
			Destination struct {
				Any struct {
				} `xml:"any" json:"any,omitempty"`
			} `xml:"destination" json:"destination,omitempty"`
		} `xml:"rule" json:"rule,omitempty"`
	} `xml:"filter" json:"filter,omitempty"`
	Rrd struct {
		Enable struct {
		} `xml:"enable" json:"enable,omitempty"`
	} `xml:"rrd" json:"rrd,omitempty"`
	LoadBalancer struct {
		MonitorType []struct {
			Name struct {
				Text string `xml:",chardata" json:"text,omitempty"` // ICMP, TCP, HTTP, HTTPS, S...
			} `xml:"name" json:"name,omitempty"`
			Type struct {
				Text string `xml:",chardata" json:"text,omitempty"` // icmp, tcp, http, https, s...
			} `xml:"type" json:"type,omitempty"`
			Descr struct {
				Text string `xml:",chardata" json:"text,omitempty"` // ICMP, Generic TCP, Generi...
			} `xml:"descr" json:"descr,omitempty"`
			Options struct {
				Path struct {
					Text string `xml:",chardata" json:"text,omitempty"` // /
				} `xml:"path" json:"path,omitempty"`
				Host struct {
				} `xml:"host" json:"host,omitempty"`
				Code struct {
					Text string `xml:",chardata" json:"text,omitempty"` // 200
				} `xml:"code" json:"code,omitempty"`
				Send struct {
				} `xml:"send" json:"send,omitempty"`
				Expect struct {
					Text string `xml:",chardata" json:"text,omitempty"` // 220 *
				} `xml:"expect" json:"expect,omitempty"`
			} `xml:"options" json:"options,omitempty"`
		} `xml:"monitor_type" json:"monitor_type,omitempty"`
	} `xml:"load_balancer" json:"load_balancer,omitempty"`
	Ntpd struct {
		Prefer struct {
			Text string `xml:",chardata" json:"text,omitempty"` // 0.opnsense.pool.ntp.org
		} `xml:"prefer" json:"prefer,omitempty"`
	} `xml:"ntpd" json:"ntpd,omitempty"`
	Widgets struct {
		Sequence struct {
			Text string `xml:",chardata" json:"text,omitempty"` // system_information-contai...
		} `xml:"sequence" json:"sequence,omitempty"`
		ColumnCount struct {
			Text string `xml:",chardata" json:"text,omitempty"` // 2
		} `xml:"column_count" json:"column_count,omitempty"`
	} `xml:"widgets" json:"widgets,omitempty"`
}
