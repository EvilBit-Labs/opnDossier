# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

before:
  hooks:
    - go mod tidy
    - go generate ./...
    - git-cliff --output CHANGELOG.md
    - mdformat CHANGELOG.md
    # Build binary first for generating documentation
    - go build -o ./opndossier-temp ./main.go
    # Generate shell completions
    - mkdir -p ./packaging/completions
    - bash -c './opndossier-temp completion bash > ./packaging/completions/opndossier.bash'
    - bash -c './opndossier-temp completion zsh > ./packaging/completions/opndossier.zsh'
    - bash -c './opndossier-temp completion fish > ./packaging/completions/opndossier.fish'
    - bash -c './opndossier-temp completion powershell > ./packaging/completions/opndossier.ps1'
    # Generate man pages
    - ./opndossier-temp man ./packaging/
    # Clean up temporary binary
    - rm ./opndossier-temp

builds:
  - binary: opndossier
    main: ./main.go
    env:
      - CGO_ENABLED=0
    goos:
      - freebsd
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}} -X github.com/EvilBit-Labs/opnDossier/cmd.buildDate={{.Date}} -X github.com/EvilBit-Labs/opnDossier/cmd.gitCommit={{.Commit}}
    ignore:
      - goos: freebsd
        goarch: arm64
    flags:
      - -trimpath
    mod_timestamp: "{{ .CommitTimestamp }}"

archives:
  - formats: tar.gz
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        formats: zip
    files:
      - LICENSE
      - README.md
      - CHANGELOG.md

changelog:
  disable: true
checksum:
  name_template: "{{ .ProjectName }}_checksums.txt"

release:
  github:
    owner: "EvilBit-Labs"
    name: "opnDossier"
  prerelease: auto
  include_meta: true
  header: |
    ## Release {{.Tag}}

    This release includes the following changes:
  footer: |

    **Full Changelog**: https://github.com/EvilBit-Labs/opnDossier/compare/{{.PreviousTag}}...{{.Tag}}

    ## Security Information

    This release includes:
    - ✅ SBOM (Software Bill of Materials) generated with Syft
    - ✅ Vulnerability scan results with Grype
    - ✅ SLSA Level 3 provenance attestation
    - ✅ Cosign signatures for all artifacts
    - ✅ License compliance verified with FOSSA

    ## Installation

    ### Package Managers

    **Debian/Ubuntu (.deb)**:
    ```bash
    wget https://github.com/EvilBit-Labs/opnDossier/releases/download/{{.Tag}}/opndossier_{{.Version}}_linux_amd64.deb
    sudo dpkg -i opndossier_{{.Version}}_linux_amd64.deb
    ```

    **Red Hat/CentOS/Fedora (.rpm)**:
    ```bash
    wget https://github.com/EvilBit-Labs/opnDossier/releases/download/{{.Tag}}/opndossier_{{.Version}}_linux_amd64.rpm
    sudo rpm -i opndossier_{{.Version}}_linux_amd64.rpm
    ```

    **Alpine (.apk)**:
    ```bash
    wget https://github.com/EvilBit-Labs/opnDossier/releases/download/{{.Tag}}/opndossier_{{.Version}}_linux_amd64.apk
    sudo apk add --allow-untrusted opndossier_{{.Version}}_linux_amd64.apk
    ```

    **Arch Linux**:
    ```bash
    wget https://github.com/EvilBit-Labs/opnDossier/releases/download/{{.Tag}}/opndossier_{{.Version}}_linux_amd64.pkg.tar.xz
    sudo pacman -U opndossier_{{.Version}}_linux_amd64.pkg.tar.xz
    ```

    ### Download Binary
    Download the appropriate binary for your platform from the assets below.

    ### Docker
    ```bash
    docker pull ghcr.io/evilbit-labs/opndossier:{{.Tag}}
    ```

    ### Verify Checksums
    ```bash
    sha256sum -c opnDossier_checksums.txt
    ```
source:
  enabled: false
universal_binaries:
  - replace: true

dockers:
  - image_templates:
      - "ghcr.io/evilbit-labs/opndossier:{{ .Tag }}"
      - "ghcr.io/evilbit-labs/opndossier:v{{ .Major }}"
      - "ghcr.io/evilbit-labs/opndossier:v{{ .Major }}.{{ .Minor }}"
      - "ghcr.io/evilbit-labs/opndossier:latest"
    use: buildx
    dockerfile: Dockerfile.releaser
    goarch: amd64
    goos: linux
    build_flag_templates:
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source = 'https://github.com/EvilBit-Labs/opnDossier'"
      - "--build-arg=branch=latest"
      - "--platform=linux/amd64"

milestones:
  - repo:
      owner: "EvilBit-Labs"
      name: opnDossier
    close: true
    fail_on_error: false
nfpms:
  - id: packages
    package_name: opndossier
    file_name_template: "{{ .ConventionalFileName }}"
    vendor: EvilBit Labs
    homepage: https://github.com/EvilBit-Labs/opnDossier
    maintainer: EvilBit Labs <contact@evilbitlabs.io>
    description: |
      opnDossier is a command-line interface (CLI) tool designed to process OPNsense
      firewall configuration files (config.xml) and convert them into human-readable
      formats, primarily Markdown. This tool assists network administrators and
      security professionals in documenting, auditing, and understanding their
      OPNsense configurations more effectively.
    license: MIT
    section: utils
    priority: optional
    formats:
      - deb
      - rpm
      - apk
      - archlinux
    dependencies:
      - ca-certificates
    recommends:
      - git
      - curl
    suggests:
      - bash-completion
    bindir: /usr/bin
    contents:
      # Binary is automatically included by nfpm from the build output
      # Documentation
      - src: ./LICENSE
        dst: /usr/share/doc/opndossier/LICENSE
        file_info:
          mode: 0644
      - src: ./README.md
        dst: /usr/share/doc/opndossier/README.md
        file_info:
          mode: 0644
      - src: ./CHANGELOG.md
        dst: /usr/share/doc/opndossier/CHANGELOG.md
        file_info:
          mode: 0644
      # Man page
      - src: ./packaging/opnDossier.1
        dst: /usr/share/man/man1/opndossier.1
        file_info:
          mode: 0644
      # Shell completions
      - src: ./packaging/completions/opndossier.bash
        dst: /usr/share/bash-completion/completions/opndossier
        file_info:
          mode: 0644
      - src: ./packaging/completions/opndossier.zsh
        dst: /usr/share/zsh/site-functions/_opndossier
        file_info:
          mode: 0644
      - src: ./packaging/completions/opndossier.fish
        dst: /usr/share/fish/vendor_completions.d/opndossier.fish
        file_info:
          mode: 0644
    rpm:
      group: Applications/System
      compression: lzma
      signature:
        key_file: '{{ if index .Env "RPM_SIGNING_KEY_FILE" }}{{ .Env.RPM_SIGNING_KEY_FILE }}{{ end }}'
    deb:
      compression: xz
      signature:
        key_file: '{{ if index .Env "DEB_SIGNING_KEY_FILE" }}{{ .Env.DEB_SIGNING_KEY_FILE }}{{ end }}'
    apk:
      signature:
        key_file: '{{ if index .Env "APK_SIGNING_KEY_FILE" }}{{ .Env.APK_SIGNING_KEY_FILE }}{{ end }}'
    archlinux:
      pkgbase: opndossier
      packager: EvilBit Labs <contact@evilbitlabs.io>

sboms:
  - id: archive-sbom
    artifacts: archive
  - id: package-sbom
    artifacts: package

# Cosign signing configuration
signs:
  - artifacts: all
    args:
      - "--yes"
      - "--bundle"
      - "cosign.bundle"
    env:
      - COSIGN_EXPERIMENTAL=1

# SLSA provenance generation
# Note: GoReleaser doesn't have native SLSA support yet, so this is handled via GitHub Actions
# for automated releases, or manually for local releases

notarize:
  macos:
    - enabled: '{{ isEnvSet "MACOS_SIGN_P12" }}'
      sign:
        certificate: "{{.Env.MACOS_SIGN_P12}}"
        password: "{{.Env.MACOS_SIGN_PASSWORD}}"
      notarize:
        issuer_id: "{{.Env.MACOS_NOTARY_ISSUER_ID}}"
        key_id: "{{.Env.MACOS_NOTARY_KEY_ID}}"
        key: "{{.Env.MACOS_NOTARY_KEY}}"
        wait: true
